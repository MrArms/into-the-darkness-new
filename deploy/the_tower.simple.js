(function(){var COMPILED=!0,goog=goog||{};goog.global=this;goog.DEBUG=!0;goog.LOCALE="en";goog.TRUSTED_SITE=!0;goog.provide=function(a){if(!COMPILED){if(goog.isProvided_(a))throw Error('Namespace "'+a+'" already declared.');delete goog.implicitNamespaces_[a];for(var b=a;(b=b.substring(0,b.lastIndexOf(".")))&&!goog.getObjectByName(b);)goog.implicitNamespaces_[b]=!0}goog.exportPath_(a)};
goog.setTestOnly=function(a){if(COMPILED&&!goog.DEBUG)throw a=a||"",Error("Importing test-only code into non-debug environment"+a?": "+a:".");};COMPILED||(goog.isProvided_=function(a){return!goog.implicitNamespaces_[a]&&!!goog.getObjectByName(a)},goog.implicitNamespaces_={});goog.exportPath_=function(a,b,c){a=a.split(".");c=c||goog.global;!(a[0]in c)&&c.execScript&&c.execScript("var "+a[0]);for(var d;a.length&&(d=a.shift());)!a.length&&goog.isDef(b)?c[d]=b:c=c[d]?c[d]:c[d]={}};
goog.getObjectByName=function(a,b){for(var c=a.split("."),d=b||goog.global,e;e=c.shift();)if(goog.isDefAndNotNull(d[e]))d=d[e];else return null;return d};goog.globalize=function(a,b){var c=b||goog.global,d;for(d in a)c[d]=a[d]};
goog.addDependency=function(a,b,c){if(!COMPILED){var d;a=a.replace(/\\/g,"/");for(var e=goog.dependencies_,f=0;d=b[f];f++)e.nameToPath[d]=a,a in e.pathToNames||(e.pathToNames[a]={}),e.pathToNames[a][d]=!0;for(d=0;b=c[d];d++)a in e.requires||(e.requires[a]={}),e.requires[a][b]=!0}};goog.ENABLE_DEBUG_LOADER=!0;
goog.require=function(a){if(!COMPILED&&!goog.isProvided_(a)){if(goog.ENABLE_DEBUG_LOADER){var b=goog.getPathFromDeps_(a);if(b){goog.included_[b]=!0;goog.writeScripts_();return}}a="goog.require could not find: "+a;goog.global.console&&goog.global.console.error(a);throw Error(a);}};goog.basePath="";goog.nullFunction=function(){};goog.identityFunction=function(a,b){return a};goog.abstractMethod=function(){throw Error("unimplemented abstract method");};
goog.addSingletonGetter=function(a){a.getInstance=function(){if(a.instance_)return a.instance_;goog.DEBUG&&(goog.instantiatedSingletons_[goog.instantiatedSingletons_.length]=a);return a.instance_=new a}};goog.instantiatedSingletons_=[];
!COMPILED&&goog.ENABLE_DEBUG_LOADER&&(goog.included_={},goog.dependencies_={pathToNames:{},nameToPath:{},requires:{},visited:{},written:{}},goog.inHtmlDocument_=function(){var a=goog.global.document;return"undefined"!=typeof a&&"write"in a},goog.findBasePath_=function(){if(goog.global.CLOSURE_BASE_PATH)goog.basePath=goog.global.CLOSURE_BASE_PATH;else if(goog.inHtmlDocument_())for(var a=goog.global.document.getElementsByTagName("script"),b=a.length-1;0<=b;--b){var c=a[b].src,d=c.lastIndexOf("?"),d=
-1==d?c.length:d;if("base.js"==c.substr(d-7,7)){goog.basePath=c.substr(0,d-7);break}}},goog.importScript_=function(a){var b=goog.global.CLOSURE_IMPORT_SCRIPT||goog.writeScriptTag_;!goog.dependencies_.written[a]&&b(a)&&(goog.dependencies_.written[a]=!0)},goog.writeScriptTag_=function(a){if(goog.inHtmlDocument_()){var b=goog.global.document;if("complete"==b.readyState){if(/\bdeps.js$/.test(a))return!1;throw Error('Cannot write "'+a+'" after document load');}b.write('<script type="text/javascript" src="'+
a+'">\x3c/script>');return!0}return!1},goog.writeScripts_=function(){function a(e){if(!(e in d.written)){if(!(e in d.visited)&&(d.visited[e]=!0,e in d.requires))for(var g in d.requires[e])if(!goog.isProvided_(g))if(g in d.nameToPath)a(d.nameToPath[g]);else throw Error("Undefined nameToPath for "+g);e in c||(c[e]=!0,b.push(e))}}var b=[],c={},d=goog.dependencies_,e;for(e in goog.included_)d.written[e]||a(e);for(e=0;e<b.length;e++)if(b[e])goog.importScript_(goog.basePath+b[e]);else throw Error("Undefined script input");
},goog.getPathFromDeps_=function(a){return a in goog.dependencies_.nameToPath?goog.dependencies_.nameToPath[a]:null},goog.findBasePath_(),goog.global.CLOSURE_NO_DEPS||goog.importScript_(goog.basePath+"deps.js"));
goog.typeOf=function(a){var b=typeof a;if("object"==b)if(a){if(a instanceof Array)return"array";if(a instanceof Object)return b;var c=Object.prototype.toString.call(a);if("[object Window]"==c)return"object";if("[object Array]"==c||"number"==typeof a.length&&"undefined"!=typeof a.splice&&"undefined"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable("splice"))return"array";if("[object Function]"==c||"undefined"!=typeof a.call&&"undefined"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable("call"))return"function"}else return"null";
else if("function"==b&&"undefined"==typeof a.call)return"object";return b};goog.isDef=function(a){return void 0!==a};goog.isNull=function(a){return null===a};goog.isDefAndNotNull=function(a){return null!=a};goog.isArray=function(a){return"array"==goog.typeOf(a)};goog.isArrayLike=function(a){var b=goog.typeOf(a);return"array"==b||"object"==b&&"number"==typeof a.length};goog.isDateLike=function(a){return goog.isObject(a)&&"function"==typeof a.getFullYear};goog.isString=function(a){return"string"==typeof a};
goog.isBoolean=function(a){return"boolean"==typeof a};goog.isNumber=function(a){return"number"==typeof a};goog.isFunction=function(a){return"function"==goog.typeOf(a)};goog.isObject=function(a){var b=typeof a;return"object"==b&&null!=a||"function"==b};goog.getUid=function(a){return a[goog.UID_PROPERTY_]||(a[goog.UID_PROPERTY_]=++goog.uidCounter_)};goog.removeUid=function(a){"removeAttribute"in a&&a.removeAttribute(goog.UID_PROPERTY_);try{delete a[goog.UID_PROPERTY_]}catch(b){}};
goog.UID_PROPERTY_="closure_uid_"+(1E9*Math.random()>>>0);goog.uidCounter_=0;goog.getHashCode=goog.getUid;goog.removeHashCode=goog.removeUid;goog.cloneObject=function(a){var b=goog.typeOf(a);if("object"==b||"array"==b){if(a.clone)return a.clone();var b="array"==b?[]:{},c;for(c in a)b[c]=goog.cloneObject(a[c]);return b}return a};goog.bindNative_=function(a,b,c){return a.call.apply(a.bind,arguments)};
goog.bindJs_=function(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var c=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(c,d);return a.apply(b,c)}}return function(){return a.apply(b,arguments)}};goog.bind=function(a,b,c){Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf("native code")?goog.bind=goog.bindNative_:goog.bind=goog.bindJs_;return goog.bind.apply(null,arguments)};
goog.partial=function(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var b=Array.prototype.slice.call(arguments);b.unshift.apply(b,c);return a.apply(this,b)}};goog.mixin=function(a,b){for(var c in b)a[c]=b[c]};goog.now=goog.TRUSTED_SITE&&Date.now||function(){return+new Date};
goog.globalEval=function(a){if(goog.global.execScript)goog.global.execScript(a,"JavaScript");else if(goog.global.eval)if(null==goog.evalWorksForGlobals_&&(goog.global.eval("var _et_ = 1;"),"undefined"!=typeof goog.global._et_?(delete goog.global._et_,goog.evalWorksForGlobals_=!0):goog.evalWorksForGlobals_=!1),goog.evalWorksForGlobals_)goog.global.eval(a);else{var b=goog.global.document,c=b.createElement("script");c.type="text/javascript";c.defer=!1;c.appendChild(b.createTextNode(a));b.body.appendChild(c);
b.body.removeChild(c)}else throw Error("goog.globalEval not available");};goog.evalWorksForGlobals_=null;goog.getCssName=function(a,b){var c=function(a){return goog.cssNameMapping_[a]||a},d=function(a){a=a.split("-");for(var b=[],d=0;d<a.length;d++)b.push(c(a[d]));return b.join("-")},d=goog.cssNameMapping_?"BY_WHOLE"==goog.cssNameMappingStyle_?c:d:function(a){return a};return b?a+"-"+d(b):d(a)};goog.setCssNameMapping=function(a,b){goog.cssNameMapping_=a;goog.cssNameMappingStyle_=b};
!COMPILED&&goog.global.CLOSURE_CSS_NAME_MAPPING&&(goog.cssNameMapping_=goog.global.CLOSURE_CSS_NAME_MAPPING);goog.getMsg=function(a,b){var c=b||{},d;for(d in c){var e=(""+c[d]).replace(/\$/g,"$$$$");a=a.replace(RegExp("\\{\\$"+d+"\\}","gi"),e)}return a};goog.getMsgWithFallback=function(a,b){return a};goog.exportSymbol=function(a,b,c){goog.exportPath_(a,b,c)};goog.exportProperty=function(a,b,c){a[b]=c};
goog.inherits=function(a,b){function c(){}c.prototype=b.prototype;a.superClass_=b.prototype;a.prototype=new c;a.prototype.constructor=a};
goog.base=function(a,b,c){var d=arguments.callee.caller;if(d.superClass_)return d.superClass_.constructor.apply(a,Array.prototype.slice.call(arguments,1));for(var e=Array.prototype.slice.call(arguments,2),f=!1,g=a.constructor;g;g=g.superClass_&&g.superClass_.constructor)if(g.prototype[b]===d)f=!0;else if(f)return g.prototype[b].apply(a,e);if(a[b]===d)return a.constructor.prototype[b].apply(a,e);throw Error("goog.base called from a method of one id to a method of a different id");};goog.scope=function(a){a.call(goog.global)};var tt={Globals:{}},Globals={screen_width:120,screen_height:40,font_size:18,screen_manager:null,console_debug:!0,mapWindowWidth:80,mapWindowHeight:36,cheat:!1,seeAllMap:!1,mapStartCol:2};Globals.mapStartRow=Math.floor((Globals.screen_height-Globals.mapWindowHeight)/2);Globals.mouseOverColour="#00F";Globals.damageColour="#F22";Globals.redColour="#F44";Globals.poisonColour="#393";Globals.healColour="#2F2";Globals.whiteColour="#FFF";Globals.cyanColour="#1FF";Globals.greenColour="#4F4";
Globals.lightRedColour="#F55";Globals.yellowColour="#FF5";Globals.uniqueColour="#F5F";Globals.orangeColour="#F96";Globals.blueColour="#44F";Globals.uniqueColourTextColour="%c{"+Globals.uniqueColour+"}";Globals.lightRedTextColour="%c{"+Globals.lightRedColour+"}";Globals.cyanTextColour="%c{"+Globals.cyanColour+"}";Globals.greenTextColour="%c{"+Globals.greenColour+"}";Globals.whiteTextColour="%c{"+Globals.whiteColour+"}";Globals.redTextColour="%c{"+Globals.damageColour+"}";
Globals.damageTextColour="%c{"+Globals.damageColour+"}";Globals.poisonTextColour="%c{"+Globals.poisonColour+"}";Globals.healTextColour="%c{"+Globals.healColour+"}";Globals.yellowTextColour="%c{"+Globals.yellowColour+"}";Globals.descriptionTextColour="%c{#FF8}";Globals.monsterAwarenessRange=7;Globals.maxMonsterPathToMove=10;Globals.cardsInHand=15;Globals.numberCardsYouCanSelect=3;Globals.startingCards=20;Globals.maxNumberCards=50;Globals.bloodLustHealingPerKill=2;Globals.graphicalEffectDelay=0.2;
Globals.delayBetweenEffects=0.2;Globals.shuffleCardReduction=2;Globals.numberLevels=5;tt.GraphicalEffect={};GraphicalEffect=function(a,b,c){this._init(a,b,c)};var p=GraphicalEffect.prototype;GraphicalEffect.prototype.constructor=GraphicalEffect;p._type=null;p._position=null;p._values=null;p.getType=function(){return this._type};p.getPosition=function(){return this._position};p.getValues=function(){return this._values};p.getColour=function(){return this._colour};p.getValue=function(){return this._values[0]};
p._init=function(a,b,c){this._type=a;this._position=b;this._values=c;this._colour=Globals.damageColour;"heal"===this._type?this._colour=Globals.healColour:"poison"===this._type&&(this._colour=Globals.poisonColour)};tt.Screen={};Screen=function(){};p=Screen.prototype;Screen.prototype.constructor=Screen;p.enter=function(){};p.exit=function(){};p.render=function(a){};p.handleInput=function(a,b){};p._eventHelperFunction=function(a,b){};p._keydownHandler=function(a){};p._keypressupHandler=function(a){};p._keypressHandler=function(a){};p._mouseDownHandler=function(a){};p._mouseUpHandler=function(a){};p._mouseOverHandler=function(a){};p._mouseOutHandler=function(a){};p._mouseMoveHandler=function(a){};tt.CardGlobals={};var CardGlobals={cardData:{}};CardGlobals.cardData.attack_plus_1={name:"Strength",description:"Increases your attack by 1",attack_increase:1};CardGlobals.cardData.defence_plus_1={name:"Vitality",description:"Increases your defence by 1",defence_increase:1};CardGlobals.cardData.fire_brand={name:"Flame Strike",description:"Does double damage after defence is subtracted",fire_brand:1};
CardGlobals.cardData.poison_brand={name:"Poison",description:"Poisons your opponent if you manage to damage them, doing damage each turn up to one less than your attack value",poison_brand:1};CardGlobals.cardData.shatter={name:"Armour Piercing",description:"Reduces monster armour by half (rounded down)",shatter:1};CardGlobals.cardData.death_blow={name:"Death Blow",description:"If you do 50% or more damage of opponent HP then they die",death_blow:1};
CardGlobals.cardData.reckless={name:"Reckless Attack",description:"Add defence to attack and reduces defence to 0",reckless:1};CardGlobals.cardData.defend={name:"Defend",description:"Add attack to defence and reduces attack to 0",defend:1};CardGlobals.cardData.razor_armour={name:"Spiked Armour",description:"Damages attacker by the amount of defence you have",razor_armour:1};CardGlobals.cardData.double_blow={name:"Double Blow",description:"Hits an opponent twice instead of once",double_blow:1};
CardGlobals.cardData.dodge={name:"Dodge",description:"You will evade all attacks this turn",dodge:1};CardGlobals.cardData.adrenelin={name:"Adrenelin",description:"You get an extra turn for killing a monster",adrenelin:1};CardGlobals.cardData.bravery={name:"Bravery",description:"+1 attack for each enemy more than 1 surrounding you",bravery:1};CardGlobals.cardData.revenge={name:"Revenge",description:"+1 attack for each point of damage you sustained last turn",revenge:1};
CardGlobals.cardData.payback={name:"Payback",description:"Damage attackers by the amount that they damage you",payback:1};CardGlobals.cardData.absorb={name:"Absorb",description:"When you defend against an attack you regain health points equal to the amount that you defended against",absorb:1};CardGlobals.cardData.aggression={name:"Aggression",description:"Increase damage by 1 for each monster more than 1 that you hit this turn",aggression:1};
CardGlobals.cardData.health_potion={name:"Health Restore",description:"Increase health by 5 at the end of your turn",health_potion:1};CardGlobals.cardData.reversal={name:"Reversal",description:"Swaps attack and defence with any monsters you attack or defend against",reversal:1};CardGlobals.cardData.swap={name:"Swap",description:"Swaps your attack and defence values",swap:1};CardGlobals.cardData.axe={name:"Axe Attack",description:"Hit up to 3 enemies in front of you in this pattern:\n\n..............\n...x%c{#1FF}X%c{#FFF}x....x%c{#1FF}X%c{#FFF}..\n....@.....@x..\n.............."};
CardGlobals.cardData.lance={name:"Lance Attack",description:"Hits two squares in front of you rather than one",lance:1};CardGlobals.cardData.whirlwind={name:"Whirlwind Attack",description:"Hits every square surrounding you, but does 1 less damage",whirlwind:1};CardGlobals.cardData.drain_life={name:"Drain Life",description:"Regain health for each point of damage you inflict"};CardGlobals.cardData.blood_lust={name:"Blood Lust",description:"Regain 2 health points for each monster you kill this turn"};
CardGlobals.cardData.knockback={name:"Knockback",description:"Knockback opponent a square. If the square is occupied or a wall then attack is increased by 50%"};CardGlobals.cardData.counter_attack={name:"Counter Attack",description:"Hit opponent back after they hit you"};CardGlobals.cardData.paralyse={name:"Paralyse",description:"Paralyses opponent if you manage to damage them"};CardGlobals.cardData.dragon_strike={name:"Dragon Strike",description:"Attacks opponents in front and behind you at once"};
CardGlobals.cardData.free_action={name:"Free Action",description:"Prevents paralysis for a turn"};CardGlobals.cardData.cure_poison={name:"Cure Poison",description:"Cures poison completely"};CardGlobals.cardData["double"]={name:"Joker",description:"Doubles attack and defence for both you and your opponents"};CardGlobals.cardData.great_sword={name:"Great Sword",description:"Reduces defence by 1 but hits up to 5 enemies in front of you in this pattern:\n\n..............\n...x%c{#1FF}X%c{#FFF}x...xx%c{#1FF}X%c{#FFF}..\n...x@x....@x..\n...........x.."};
CardGlobals.cardData.inversion={name:"Inversion",description:"Adds your opponent's attack onto yours"};CardGlobals.cardData.tactics={name:"Tactics",description:"If your defence is higher than your opponent's defence then add the different onto your attack"};CardGlobals.cardData.berzerk={name:"Berzerk",description:"Adds 2 to your attack, but paralyses you afterwards"};CardGlobals.cardData.versatility={name:"Versatility",description:"Increase defence or attack if one is lower than the other"};
CardGlobals.cardData.self_sacrifice={name:"Self Sacrifice",description:"Adds +2 to attack, but also causes you 2 damage."};CardGlobals.cardData.maximise={name:"Maximise",description:"Takes maximum of yours and your opponents attack and defence values during a battle"};CardGlobals.cardData.defiance={name:"Defiance",description:"Adds 2 to your attack if your health is at 50% or lower"};CardGlobals.cardData.resistance={name:"Resistance",description:"Adds 2 to your defence if your health is at 50% or lower"};
CardGlobals.cardData.fortify={name:"Fortify",description:"+1 defence for each enemy more than 1 surrounding you"};CardGlobals.cardData.precision_strike={name:"Precision Strike",description:"Attack that ignores armour, but also reduces your attack by 1"};CardGlobals.cardData.shield={name:"Shield",description:"Adds 2 to your defence but reduces your attack by 1"};CardGlobals.cardData.fury={name:"Fury",description:"Adds 2 to your attack but reduces your defence by 1"};
CardGlobals.cardData.gauntlet={name:"Gauntlet",description:"Increases your attack and defence by 1"};CardGlobals.cardData.first_strike={name:"First Strike",description:"Attack increased by 2 if opponent is at full health"};CardGlobals.cardData.oppression={name:"Oppression",description:"Add +1 attack for each point opponent is under full health up to a maximum of +3"};CardGlobals.cardData.replenish={name:"Replenish",description:"If you block or dodge an opponents attack completely then regain health by their attack amount"};
CardGlobals.cardData.slash={name:"Slash",description:"An attack guaranteed to do at least 1 damage"};CardGlobals.monsterCardData={};CardGlobals.monsterCardData.blunt={name:"Weaken",description:"Reduces enemy attack by 1"};CardGlobals.monsterCardData.attrition={name:"Reduce Armour",description:"Reduces enemy defence by 1"};CardGlobals.healthPotionAmount=5;tt.Card={};Card=function(a,b){this._init(a,b)};p=Card.prototype;Card.prototype.constructor=Card;p.getKey=function(){return this._key};p.getName=function(){return this._name};p.getDescription=function(){return this._description};p._init=function(a,b){this._key=a;this._name=b.name;this._description=b.description};tt.CardPack={};CardPack=function(){this._init()};p=CardPack.prototype;CardPack.prototype.constructor=CardPack;p._cards=null;p._numberCards=null;p.getCardAtIndex=function(a){return this._cards[a]};p.shuffleCards=function(){Utils.shuffleArray(this._cards)};p.putToBackOfPack=function(a){a.sort();for(var b=a.length-1;0<=b;b--){var c=this._cards.splice(a[b],1);this._cards.push(c[0])}};p.getCardsFromIndices=function(a){for(var b=[],c=0;c<a.length;c++)b.push(this._cards[a[c]]);return b};
p.removeCards=function(a,b){b&&(this._numberCards-=a.length);0!==a.length&&this.putToBackOfPack(a)};p.reduceNumberCards=function(a){this._numberCards=Math.max(0,this._numberCards-a)};p.increaseNumberCards=function(a){this._numberCards=Math.min(Globals.maxNumberCards,this._numberCards+a)};p.getNumberCards=function(){return this._numberCards};p.newHand=function(){for(var a=0;a<Globals.cardsInHand;a++)this.removeCards([0],!1)};
p.shuffle=function(){Utils.shuffleArray(this._cards);for(var a=0;a<Globals.cardsInHand;a++)this.removeCards([0],!1)};p._initialiseCards=function(){this._cards=[];for(var a in CardGlobals.cardData){var b=new Card(a,CardGlobals.cardData[a]);this._cards.push(b)}};p._init=function(){this._numberCards=Globals.startingCards;this._initialiseCards();this.shuffleCards()};tt.GameGlobals={};var GameGlobals={actorsData:[]};GameGlobals.actorsData["@"]={max_hp:10,base_attack:1,base_defence:1,alignment:"GOOD",name:"Player",innate_abilities:[],innate_abilities2:[],card_gain:0,colour:Globals.whiteColour};GameGlobals.actorsData.t={max_hp:1,base_attack:2,base_defence:0,alignment:"BAD",name:"A Thief",innate_abilities:[],innate_abilities2:[],card_gain:1,colour:Globals.cyanColour};
GameGlobals.actorsData.m={max_hp:3,base_attack:2,base_defence:0,alignment:"BAD",name:"A Mercenary",innate_abilities:[],innate_abilities2:[],card_gain:1.5,colour:Globals.greenColour};GameGlobals.actorsData.a={max_hp:1,base_attack:2,base_defence:1,alignment:"BAD",name:"An Adder",innate_abilities:["poison_brand","cure_poison"],innate_abilities2:[],card_gain:1.3,colour:Globals.poisonColour};
GameGlobals.actorsData.w={max_hp:2,base_attack:2,base_defence:0,alignment:"BAD",name:"A Warrior",innate_abilities:["counter_attack"],innate_abilities2:[],card_gain:1.3,colour:Globals.yellowTextColour};GameGlobals.actorsData.k={max_hp:1,base_attack:2,base_defence:1,alignment:"BAD",name:"A Knight",innate_abilities:[],innate_abilities2:[],card_gain:1.6,colour:Globals.orangeColour};
GameGlobals.actorsData.p={max_hp:1,base_attack:1,base_defence:1,alignment:"BAD",name:"A Phantom",innate_abilities:["paralyse"],innate_abilities2:["attrition"],card_gain:1,colour:Globals.redColour};GameGlobals.actorsData.L={max_hp:2,base_attack:1,base_defence:2,alignment:"BAD",name:"A Lost Soul",innate_abilities:[],innate_abilities2:["attrition"],card_gain:3,colour:Globals.yellowColour};
GameGlobals.actorsData.B={max_hp:2,base_attack:2,base_defence:1,alignment:"BAD",name:"A Barbarian",innate_abilities:["counter_attack"],innate_abilities2:[],card_gain:3.2,colour:Globals.blueColour};GameGlobals.actorsData.s={max_hp:1,base_attack:2,base_defence:2,alignment:"BAD",name:"A Skeleton",innate_abilities:[],innate_abilities2:[],card_gain:2.5,colour:Globals.greenColour};
GameGlobals.actorsData.d={max_hp:3,base_attack:2,base_defence:2,alignment:"BAD",name:"A Dark Knight",innate_abilities:["tactics"],innate_abilities2:[],card_gain:3.5,colour:Globals.blueColour};GameGlobals.actorsData.G={max_hp:2,base_attack:1,base_defence:1,alignment:"BAD",name:"A Ghast",innate_abilities:["paralyse","drain_life"],innate_abilities2:["attrition","blunt"],card_gain:3.5,colour:Globals.redColour};
GameGlobals.actorsData.S={max_hp:2,base_attack:2,base_defence:2,alignment:"BAD",name:"A Serpent",innate_abilities:["poison_brand","cure_poison"],innate_abilities2:[],card_gain:3.5,colour:Globals.poisonColour};GameGlobals.actorsData.y={max_hp:2,base_attack:2,base_defence:1,alignment:"BAD",name:"A Yarinx",innate_abilities:["shatter"],innate_abilities2:[],card_gain:2.5,colour:Globals.poisonColour};
GameGlobals.actorsData.X={max_hp:2,base_attack:2,base_defence:3,alignment:"BAD",name:"A Xorn",innate_abilities:[],innate_abilities2:[],card_gain:3.5,colour:Globals.cyanColour};GameGlobals.actorsData.h={max_hp:4,base_attack:2,base_defence:1,alignment:"BAD",name:"A Horror",innate_abilities:["drain_life"],innate_abilities2:[],card_gain:3.5,colour:Globals.orangeColour};
GameGlobals.actorsData.O={max_hp:3,base_attack:1,base_defence:2,alignment:"BAD",name:"An Osyluth",innate_abilities:["oppression"],innate_abilities2:[],card_gain:3.5,colour:Globals.greenColour};GameGlobals.actorsData.U={max_hp:4,base_attack:3,base_defence:2,alignment:"BAD",name:"An Umber Hulk",innate_abilities:[],innate_abilities2:[],card_gain:4,colour:Globals.yellowColour};
GameGlobals.actorsData.F={max_hp:6,base_attack:2,base_defence:1,alignment:"BAD",name:"The Fire King",innate_abilities:["fire_brand"],innate_abilities2:[],card_gain:4,colour:Globals.uniqueColour};GameGlobals.actorsData.H={max_hp:4,base_attack:2,base_defence:2,alignment:"BAD",name:"The Hydra",innate_abilities:["poison_brand"],innate_abilities2:[],card_gain:5,colour:Globals.uniqueColour};
GameGlobals.actorsData.C={max_hp:4,base_attack:2,base_defence:3,alignment:"BAD",name:"The Cyclops",innate_abilities:[],innate_abilities2:[],card_gain:8,colour:Globals.uniqueColour};GameGlobals.actorsData.D={max_hp:5,base_attack:3,base_defence:2,alignment:"BAD",name:"Death",innate_abilities:["counter_attack"],innate_abilities2:[],card_gain:8,colour:Globals.uniqueColour};
GameGlobals.actorsData.A={max_hp:8,base_attack:3,base_defence:2,alignment:"BAD",name:"Ariel",innate_abilities:["drain_life"],innate_abilities2:["attrition","blunt"],card_gain:10,win_game:!0,colour:Globals.uniqueColour};GameGlobals.levelEnemies={};GameGlobals.levelEnemies[1]=["t","a","w","k","m"];GameGlobals.levelEnemies[2]="wkmpLBs".split("");GameGlobals.levelEnemies[3]="kmLBsdGSy".split("");GameGlobals.levelEnemies[4]="pLBsdGSwXh".split("");GameGlobals.levelEnemies[5]="pLBsdGSwXhOU".split("");
GameGlobals.levelGroupEnemies={};GameGlobals.levelGroupEnemies[1]=[["p"],["w","k"],["t"]];GameGlobals.levelGroupEnemies[2]=[["p"],["w","k"],["s"]];GameGlobals.levelGroupEnemies[3]=[["w","k"],["y"],["s"]];GameGlobals.levelGroupEnemies[4]=[["y"],["p"],["G"],["s"],["h"]];GameGlobals.levelGroupEnemies[5]=[["G"],["s"],["h"],["O"]];GameGlobals.levelBoss={};GameGlobals.levelBoss[1]=["F"];GameGlobals.levelBoss[2]=["H"];GameGlobals.levelBoss[3]=["C"];GameGlobals.levelBoss[4]=["D"];
GameGlobals.levelBoss[5]=["A"];tt.Utils={};Utils=function(){};Utils.console=function(a){!0===Globals.console_debug&&console.log(a)};Utils.clamp=function(a,b,c){a=Math.min(a,c);return a=Math.max(a,b)};Utils.inBounds=function(a,b,c){return a>=b&&a<=c};Utils.GetRandomString=function(a){for(var b="",c=0;c<a;c++)b+="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".charAt(Math.floor(62*Math.random()));return b};Utils.getDistanceBetweenMapPoints=function(a,b){return Math.max(Math.abs(a[0]-b[0]),Math.abs(a[1]-b[1]))};
Utils.shuffleArray=function(a){for(var b,c,d=a.length;d;b=Math.floor(Math.random()*d),c=a[--d],a[d]=a[b],a[b]=c);return a};Utils.arrayContainsNumber=function(a,b){for(var c=0;c<a.length;c++)if(a[c]===b)return c;return null};Utils.getSurroundingCellIndices=function(a,b){return[[a-1,b-1],[a,b-1],[a+1,b-1],[a-1,b],[a+1,b],[a-1,b+1],[a,b+1],[a+1,b+1]]};Utils.addTwoArraysTogether=function(a,b){for(;0<b.length;)a.push(b.splice(0,1)[0]);return a};
Utils.distanceBetweenTwoPoints=function(a,b){var c=Math.abs(a[0]-b[0]),d=Math.abs(a[1]-b[1]);return Math.max(c,d)};Utils.getRandomArrayValue=function(a){return a[Math.floor(Math.random()*a.length)]};Utils.isPointInRectangle=function(a,b,c,d,e){return a[0]<b||a[1]<c||a[0]>d||a[1]>=e?!1:!0};Utils.getValueFromProbability=function(a){var b=Math.floor(a);a-=b;Math.random();Math.random()<a&&(b+=1);return b};tt.Camera={};Camera=function(a){this._display=a;this._init()};p=Camera.prototype;p._x=0;p._y=0;p._currentMap=null;p._player=null;p.getViewedMapData=function(){return this._lastRenderObjectGlobal.viewedMapData};p.offsetCamera=function(a,b){this._x=Utils.clamp(this._x+a,0,_mapLimits.mapWidth-Globals.mapWindowWidth);this._y=Utils.clamp(this._y+b,0,_mapLimits.mapHeight-Globals.mapWindowHeight)};p.setCameraPosition=function(a,b){this._x=a;this._y=b};
p.setCameraFocus=function(a,b){this._x=a-Math.floor(0.5*Globals.mapWindowWidth);this._y=b-Math.floor(0.5*Globals.mapWindowHeight)};p.getCellDataForMouseOver=function(a,b){var c=this.getCellPositionFromScreenAndCameraOffset(a,b),d=this._lastRenderObjectGlobal.viewedMapData.getElementFromValues(c[0],c[1]),e={};e.floorCell=d;e.actor=null;e.position=null;null!==d&&(d=this._lastRenderObjectGlobal.actorsData.getElementFromValues(c[0],c[1]),e.actor=d,e.position=c);return e};
p.getCellPositionFromScreenAndCameraOffset=function(a,b){var c=[];c[0]=a-Globals.mapStartCol+this._x;c[1]=b-Globals.mapStartRow+this._y;return c};p.updateCell=function(a,b,c,d,e){e=e||Globals.whiteTextColour;a-=this._x;b-=this._y;Utils.inBounds(a,0,Globals.mapWindowWidth-1)&&Utils.inBounds(b,0,Globals.mapWindowHeight-1)&&this._drawCell(Globals.mapStartCol+a,Globals.mapStartRow+b,d,e)};p.isCellVisible=function(a,b){var c=this._currentViewableCells.getElementFromValues(a,b);return c&&null!==c};
p.render=function(a,b,c){this._mouseCell=c;for(c=0;c<Globals.mapWindowWidth+2;c++)this._drawCell(Globals.mapStartCol-1+c,Globals.mapStartRow-1,"","#DDD","#11A"),this._drawCell(Globals.mapStartCol-1+c,Globals.mapStartRow+Globals.mapWindowHeight,"","#DDD","#11A");for(c=0;c<Globals.mapWindowHeight+2;c++)this._drawCell(Globals.mapStartCol-1,Globals.mapStartRow-1+c,"","#FFF","#11A"),this._drawCell(Globals.mapStartCol+Globals.mapWindowWidth,Globals.mapStartRow-1+c,"","#FFF","#11A");this._mouseCell&&(Utils.inBounds(this._mouseCell[0],
Globals.mapStartCol,Globals.mapWindowWidth-1)&&Utils.inBounds(this._mouseCell[1],Globals.mapStartRow,Globals.mapWindowHeight-1))&&this._drawCell(this._mouseCell[0],this._mouseCell[1],"",Globals.mouseOverColour,Globals.mouseOverColour);for(c=0;c<Globals.mapWindowWidth;c++)for(var d=0;d<Globals.mapWindowHeight;d++){var e=a.viewedMapData.getElementFromValues(this._x+c,this._y+d);e&&null!==e&&("."===e&&this._drawCell(Globals.mapStartCol+c,Globals.mapStartRow+d,".","#444"),">"===e?this._drawCell(Globals.mapStartCol+
c,Globals.mapStartRow+d,">","#444"):"#"===e&&this._drawCell(Globals.mapStartCol+c,Globals.mapStartRow+d,"","#4B3","#666"))}this._currentViewableCells=new MapArrayObject;this._lastRenderObjectGlobal=a;(new ROT.FOV.PreciseShadowcasting(function(b,c){var d=b+","+c;return d in a.mapData.getData()?(d=a.mapData.getData()[d],"."===d||">"===d):!1})).compute(this._x+Math.floor(0.5*Globals.mapWindowWidth),this._y+Math.floor(0.5*Globals.mapWindowHeight),10,this.fovOutput.bind(this));for(c=0;c<Globals.mapWindowWidth;c++)for(d=
0;d<Globals.mapWindowHeight;d++){var f=a.actorsData.getElementFromValues(this._x+c,this._y+d);f&&null!==f&&(e=this._currentViewableCells.getElementFromValues(this._x+c,this._y+d))&&null!==e&&this._drawCell(Globals.mapStartCol+c,Globals.mapStartRow+d,f.getChar().toString(),f.getColourString())}b.updateViewedMap(this._lastRenderObjectGlobal.viewedMapData)};
p.fovOutput=function(a,b,c,d){c=this._lastRenderObjectGlobal.mapData.getData()[a+","+b];(d="."===c||">"===c)||(c="#");this._lastRenderObjectGlobal.viewedMapData.setElement(c,a,b);this._currentViewableCells.setElement(c,a,b);a=Globals.mapStartCol+a-this._x;b=Globals.mapStartRow+b-this._y;a>=Globals.mapStartCol&&(a<=Globals.mapStartCol+Globals.mapWindowWidth-1&&b>=Globals.mapStartRow&&b<=Globals.mapStartRow+Globals.mapWindowHeight-1)&&(d?this._drawCell(a,b,c,"#FFF"):this._drawCell(a,b,"","#FFF","#FFF"))};
p._drawCell=function(a,b,c,d,e){this._mouseCell&&(this._mouseCell[0]===a&&this._mouseCell[1]===b)&&(e=Globals.mouseOverColour);this._display.draw(a,b,c,d,e)};p._init=function(){this._y=this._x=0};tt.Effect={};Effect=function(a,b){this._init(a,b)};p=Effect.prototype;Effect.prototype.constructor=Effect;p._name=null;p._text=null;p._timer=null;p._lastsForever=null;p.getName=function(){return this._name};p.getText=function(){return this._text};p.getTimer=function(){return this._timer};p.reduceTimer=function(){this._lastsForever||(this._timer=Math.max(0,this._timer-1))};p.isActive=function(){return this._lastsForever||0<this._timer};p.addToTimer=function(a){this._timer!=a};
p._init=function(a,b){this._name=a.getKey();this._text=a.getName();-1===b?(this._timer=999,this._lastsForever):this._timer=b};tt.Actor={};Actor=function(a,b,c){this._id=Utils.GetRandomString(10);this._level=a;this._char=b;this._scheduler=c;this._effectList=[];this._newEffectList=[];this._speed=100;this._init()};p=Actor.prototype;Actor.prototype.constructor=Actor;p._char=null;p._level=null;p._alignment=null;p._colour=null;p._max_hp=null;p._current_hp=null;p._base_attack=null;p._base_defence=null;p._current_attack=null;p._current_defence=null;p._effectList=null;p._newEffectList=null;p._damageLastTurn=null;
p._numMonstersAttackedThisTurn=null;p._numMonstersKilledThisTurn=null;p._numberEnemiesSurrounding=null;p._poisonCounter=null;p._paraylsisCounter=null;p._attritionCounter=null;p._bluntCounter=null;p._position=null;p._isDead=null;p._winGame=null;p._innateEffects=null;p.act=function(){this._isDead?Utils.console("Error. Actor is dead, should not be called to act!!!"):(this.preActionStuff(),this._level.actorTurn(this))};
p.preActionStuff=function(){this._reduceTimers(!0);this._damageLastTurn=this._damageThisTurn;this._numMonstersKilledThisTurn=this._numMonstersAttackedThisTurn=this._damageThisTurn=0;this._numberEnemiesSurrounding=this._level.getNumberEnemiesAroundActor(this)};p.actionFinished=function(){for(;0<this._newEffectList.length;){var a=this._newEffectList.splice(0,1);this._effectList.push(a[0])}this._newEffectList=[];this._reduceTimers(!1);this._applyAfterTurnEffects()};p.getChar=function(){return this._char};
p.isPlayer=function(){return"@"==this._char};p.getName=function(){return this._name};p.getColourString=function(){return this._colour};p.getMaxHP=function(){return this._max_hp};p.getCurrentHP=function(){return this._current_hp};p.getBaseAttack=function(){return this._base_attack};p.getCurrentAttack=function(){return this._current_attack};p.setCurrentAttack=function(a){this._current_attack=a};p.getBaseDefence=function(){return this._base_defence};p.getCurrentDefence=function(){return this._current_defence};
p.setCurrentDefence=function(a){this._current_defence=a};p.getSpeed=function(){return this._speed};p.setActive=function(a){a?this._scheduler.add(this,!0):this._scheduler.remove(this,!0)};p.setLevel=function(a){this._level=a};p.getID=function(){return this._id};p.setMapPositionFromValues=function(a,b){this._position=[a,b]};p.getMapPosition=function(){return this._position};p.isBad=function(){return"BAD"===this._alignment};p.getAlignment=function(){return this._alignment};
p.damage=function(a){this._damageThisTurn+=a;this._current_hp=Math.max(0,this._current_hp-a);0===this._current_hp&&this._kill()};p.heal=function(a){this._current_hp=Math.min(this._max_hp,this._current_hp+a)};p.updateValuesFromCards=function(a){this._newEffectList=[];for(var b=0;b<a.length;b++){var c=new Effect(a[b],2);this._newEffectList.push(c)}this._calculateAttAndDef(!1,null)};
p.hasEffect=function(a){for(var b=this.getCombinedEffectsArray(),c=0;c<b.length;c++)if(b[c].getName()===a&&b[c].isActive())return!0;return!1};p.canCounterAttack=function(){return this.hasEffect("counter_attack")&&!1===this.isParalysed()&&!this._isDead};
p.getAttackSquares=function(a){var b=this.getMapPosition(),c=[];c.push([b[0]+a[0],b[1]+a[1]]);this.hasEffect("great_sword")&&(0===a[0]&&1===a[1]?(c.push([b[0]-1,b[1]+1]),c.push([b[0]+1,b[1]+1]),c.push([b[0]-1,b[1]]),c.push([b[0]+1,b[1]])):-1===a[0]&&1===a[1]?(c.push([b[0]-1,b[1]]),c.push([b[0],b[1]+1]),c.push([b[0]-1,b[1]-1]),c.push([b[0]+1,b[1]+1])):-1===a[0]&&0===a[1]?(c.push([b[0]-1,b[1]-1]),c.push([b[0]-1,b[1]+1]),c.push([b[0],b[1]-1]),c.push([b[0],b[1]+1])):-1===a[0]&&-1===a[1]?(c.push([b[0]-
1,b[1]]),c.push([b[0],b[1]-1]),c.push([b[0]-1,b[1]+1]),c.push([b[0]+1,b[1]-1])):0===a[0]&&-1===a[1]?(c.push([b[0]-1,b[1]-1]),c.push([b[0]+1,b[1]-1]),c.push([b[0]-1,b[1]]),c.push([b[0]+1,b[1]])):1===a[0]&&-1===a[1]?(c.push([b[0],b[1]-1]),c.push([b[0]+1,b[1]]),c.push([b[0]-1,b[1]+1]),c.push([b[0]+1,b[1]+1])):1===a[0]&&0===a[1]?(c.push([b[0]+1,b[1]-1]),c.push([b[0]+1,b[1]+1]),c.push([b[0],b[1]-1]),c.push([b[0],b[1]+1])):1===a[0]&&1===a[1]&&(c.push([b[0]+1,b[1]]),c.push([b[0],b[1]+1]),c.push([b[0]+1,
b[1]-1]),c.push([b[0]-1,b[1]+1])));this.hasEffect("axe")&&(0===a[0]&&1===a[1]?(c.push([b[0]-1,b[1]+1]),c.push([b[0]+1,b[1]+1])):-1===a[0]&&1===a[1]?(c.push([b[0]-1,b[1]]),c.push([b[0],b[1]+1])):-1===a[0]&&0===a[1]?(c.push([b[0]-1,b[1]-1]),c.push([b[0]-1,b[1]+1])):-1===a[0]&&-1===a[1]?(c.push([b[0]-1,b[1]]),c.push([b[0],b[1]-1])):0===a[0]&&-1===a[1]?(c.push([b[0]-1,b[1]-1]),c.push([b[0]+1,b[1]-1])):1===a[0]&&-1===a[1]?(c.push([b[0],b[1]-1]),c.push([b[0]+1,b[1]])):1===a[0]&&0===a[1]?(c.push([b[0]+1,
b[1]-1]),c.push([b[0]+1,b[1]+1])):1===a[0]&&1===a[1]&&(c.push([b[0]+1,b[1]]),c.push([b[0],b[1]+1])));this.hasEffect("lance")&&c.push([b[0]+2*a[0],b[1]+2*a[1]]);this.hasEffect("whirlwind")&&(c=Utils.getSurroundingCellIndices(b[0],b[1]));this.hasEffect("dragon_strike")&&c.push([b[0]-a[0],b[1]-a[1]]);return c};p.addNumberMonstersKilledThisTurn=function(a){this._numMonstersKilledThisTurn+=a};p.getNumberMonstersKilledThisTurn=function(){return this._numMonstersKilledThisTurn};
p.resetNumberMonstersKilledThisTurn=function(){this._numMonstersKilledThisTurn=0};p.addNumberAttacksThisTurn=function(a){this._numMonstersAttackedThisTurn+=a};p.getNumberAttacksThisTurn=function(){return this._numMonstersAttackedThisTurn};p.addPoison=function(a){this._poisonCounter+=a};p.addParalysis=function(){this.hasEffect("free_action")||(this._paraylsisCounter+=1)};p.isParalysed=function(){return 0<this._paraylsisCounter&&!this.hasEffect("free_action")};
p.addAttrition=function(){Utils.console("this._attritionCounter = "+this._attritionCounter);this._attritionCounter+=1};p.hasAttrition=function(){return 0<this._attritionCounter};p.addBlunt=function(){this._bluntCounter+=1};p.hasBlunt=function(){return 0<this._bluntCounter};p.setFullHealth=function(){this._current_hp=this._max_hp};p.getsFreeTurn=function(){return this.hasEffect("adrenelin")&&0<this.getNumberMonstersKilledThisTurn()};
p.getCombinedEffectsArray=function(){for(var a=[],b=0;b<this._innateEffects.length;b++)a.push(this._innateEffects[b]);for(b=0;b<this._effectList.length;b++)a.push(this._effectList[b]);for(b=0;b<this._newEffectList.length;b++)a.push(this._newEffectList[b]);return a};
p.getStatusTextArray=function(){var a=[];0<this._paraylsisCounter&&a.push(Globals.redTextColour+"Paralysed");0<this._poisonCounter&&a.push(Globals.poisonTextColour+"Poisoned ("+this._poisonCounter.toString()+")");this.hasBlunt()&&a.push(Globals.redTextColour+"Weak");this.hasAttrition()&&a.push(Globals.redTextColour+"Vulnerable");return a};p.resetAttackAndDefenceValues=function(){this._current_attack=this._base_attack;this._current_defence=this._base_defence};
p._reduceStatusTimers=function(){this._attritionCounter=Math.max(0,this._attritionCounter-1);this._bluntCounter=Math.max(0,this._bluntCounter-1);this._paraylsisCounter=Math.max(0,this._paraylsisCounter-1);this._poisonCounter=Math.max(0,this._poisonCounter-1)};
p._applyAfterTurnEffects=function(){for(var a=[],b=this._effectList.length-1;0<=b;b--)if("health_potion"===this._effectList[b].getName())this.heal(CardGlobals.healthPotionAmount),this._effectList.splice(b,1);else if("blood_lust"===this._effectList[b].getName()){var c=this.getNumberMonstersKilledThisTurn()*Globals.bloodLustHealingPerKill;this.heal(c);a.push(new GraphicalEffect("heal",this.getMapPosition(),[c]))}else"cure_poison"===this._effectList[b].getName()?(this._poisonCounter=0,this._effectList.splice(b,
1)):"shuffle"===this._effectList[b].getName()&&(this._level.signalShuffle.dispatch(),this._effectList.splice(b,1));0<this._poisonCounter&&(this.damage(1),a.push(new GraphicalEffect("poison",this.getMapPosition(),[1])));this._reduceStatusTimers();0<a.length&&this._level.signalAddGraphicalEffectArray.dispatch(a);this._level.signalShowEffectsAndEndTurn.dispatch()};
p._resetValues=function(){this._effectList=[];this._numberEnemiesSurrounding=this._numMonstersKilledThisTurn=this._numMonstersAttackedThisTurn=this._damageThisTurn=this._damageLastTurn=this._bluntCounter=this._attritionCounter=this._paraylsisCounter=this._poisonCounter=0;this._current_attack=this._base_attack;this._current_defence=this._base_defence};
p._reduceTimers=function(a){for(a=this._effectList.length-1;0<=a;a--)this._effectList[a].reduceTimer(),this._effectList[a].isActive()||this._effectList.splice(a,1)};
p._updateCurrentValuesForEffect=function(a,b,c){"whirlwind"==b.getName()?this._current_attack=Math.max(0,this._current_attack-1):"attack_plus_1"===b.getName()?this._current_attack+=1:"defence_plus_1"===b.getName()?this._current_defence+=1:"defiance"===b.getName()?this._current_hp<=0.5*this._max_hp&&(this._current_attack+=2):"resistance"===b.getName()?this._current_hp<=0.5*this._max_hp&&(this._current_defence+=2):"versatility"===b.getName()?this._current_defence=this._current_attack=a=Math.max(this._current_attack,
this._current_defence):"self_sacrifice"===b.getName()?this._current_attack+=2:"great_sword"===b.getName()?this._current_defence=Math.max(0,this._current_defence-1):"reckless"===b.getName()?(this._current_attack+=this._current_defence,this._current_defence=0):"defend"===b.getName()?(this._current_defence+=this._current_attack,this._current_attack=0):"precision_strike"===b.getName()?this._current_attack=Math.max(0,this._current_attack-1):"double"===b.getName()?(this.setCurrentDefence(2*this.getCurrentDefence()),
this.setCurrentAttack(2*this.getCurrentAttack())):"maximise"===b.getName()?c&&null!==c&&(this.setCurrentAttack(Math.max(this.getCurrentAttack(),c.getCurrentAttack())),this.setCurrentDefence(Math.max(this.getCurrentDefence(),c.getCurrentDefence()))):"bravery"===b.getName()?this._current_attack+=Math.max(0,this._numberEnemiesSurrounding-1):"fortify"===b.getName()?this._current_defence+=Math.max(0,this._numberEnemiesSurrounding-1):"shield"===b.getName()?(this._current_defence+=2,this._current_attack=
Math.max(0,this._current_attack-1)):"fury"===b.getName()?(this._current_attack+=2,this._current_defence=Math.max(0,this._current_defence-1)):"gauntlet"===b.getName()?(this._current_attack+=1,this._current_defence+=1):"revenge"===b.getName()?this._current_attack+=this._damageLastTurn:"inversion"===b.getName()?null!==c&&(this._current_attack+=Math.max(0,c.getCurrentAttack())):"tactics"===b.getName()?null!==c&&(this._current_attack+=Math.max(0,this._current_defence-c.getCurrentDefence())):"berzerk"===
b.getName()?this._current_attack+=2:"swap"===b.getName()?(a=this._current_defence,this._current_defence=this._current_attack,this._current_attack=a):"aggression"!==b.getName()&&("reversal"===b.getName()&&null!==c)&&(a=c.getCurrentAttack(),c.setCurrentAttack(this.getCurrentAttack()),this.setCurrentAttack(a),a=c.getCurrentDefence(),c.setCurrentDefence(this.getCurrentDefence()),this.setCurrentDefence(a));this._current_attack=Math.max(0,this._current_attack);this._current_defence=Math.max(0,this._current_defence);
null!==c&&(c.setCurrentAttack(Math.max(0,c.getCurrentAttack())),c.setCurrentDefence(Math.max(0,c.getCurrentDefence())))};
p._calculateAttAndDef=function(a,b){if(null===b||!b.hasEffect("reversal"))this._current_attack=this._base_attack,this._current_defence=this._base_defence;this.hasAttrition()&&(this._current_defence=Math.max(0,this._current_defence-1));this.hasBlunt()&&(this._current_attack=Math.max(0,this._current_attack-1));for(var c=this.getCombinedEffectsArray(),d=0;d<c.length;d++)this._updateCurrentValuesForEffect(a,c[d],b)};
p._kill=function(){this._isDead=!0;this.setActive(!1);if(0<GameGlobals.actorsData[this._char].card_gain){var a=Utils.getValueFromProbability(GameGlobals.actorsData[this._char].card_gain);this._level.signalCardGain.dispatch(a)}!0===this._winGame&&this._level.signalWinGame.dispatch();this._level.killActor(this)};
p._init=function(){this._isDead=!1;this._name=GameGlobals.actorsData[this._char].name;this._colour=GameGlobals.actorsData[this._char].colour?GameGlobals.actorsData[this._char].colour:GameGlobals.actorsData[this._char].Globals.whiteTextColour;this._max_hp=GameGlobals.actorsData[this._char].max_hp;this._current_hp=GameGlobals.actorsData[this._char].max_hp;this._current_attack=this._base_attack=GameGlobals.actorsData[this._char].base_attack;this._current_defence=this._base_defence=GameGlobals.actorsData[this._char].base_defence;
this._alignment=GameGlobals.actorsData[this._char].alignment;this._winGame=GameGlobals.actorsData[this._char].win_game?!0:!1;this._innateEffects=[];for(var a=0;a<GameGlobals.actorsData[this._char].innate_abilities.length;a++){var b=GameGlobals.actorsData[this._char].innate_abilities[a],b=new Effect(new Card(b,CardGlobals.cardData[b]),-1);this._innateEffects.push(b)}for(a=0;a<GameGlobals.actorsData[this._char].innate_abilities2.length;a++)b=GameGlobals.actorsData[this._char].innate_abilities2[a],b=
new Effect(new Card(b,CardGlobals.monsterCardData[b]),-1),this._innateEffects.push(b);this._resetValues()};tt.Map={};Map=function(a){this._init(a)};p=Map.prototype;p._mapWidth=92;p._mapHeight=25;p._leftMostCell=null;p._rightMostCell=null;p._startPos=null;p._endPos=null;p._mapDigger=null;p.DISTANCE_FROM_EDGE_FOR_STAIRS=0;p._mapCells=null;p._viewedMapCells=null;p._freeCells=null;p.getMapWidth=function(){return this._mapWidth};p.getMapHeight=function(){return this._mapHeight};p.getMap=function(){return this._mapCells};p.getViewedMap=function(){return this._viewedMapCells};
p.updateViewedMap=function(a){this._viewedMapCells_viewedMapCells=a};p.getFreeCells=function(){return this._freeCells};p.getCellChar=function(a,b){return!Utils.inBounds(a,0,this._mapWidth)||!Utils.inBounds(b,0,this._mapHeight)||!this._mapCells.hasElement(a,b)?null:this._mapCells.getElementFromValues(a,b)};p._setCellChar=function(a,b,c){this._mapCells.setElement(a,b,c)};p.canWalk=function(a,b){var c=this.getCellChar(a,b);return"."===c||">"===c};
p.isStairs=function(a,b){return">"===this.getCellChar(a,b)};p.getStartPos=function(){return this._startPos};p.getEndPos=function(){return this._endPos};p.removeCellsAroundCellFromFreeCells=function(a,b,c){for(var d=-c;d<=c;d++)for(var e=-c;e<=c;e++)!0===this._freeCells.hasElement(a+d,b+e)&&this._freeCells.removeElement(a+d,b+e)};p.isRoomCellOld=function(a,b){for(var c=0,d=-1;1>=d;d++)for(var e=-1;1>=e;e++)if(0!==d||0!==e)!0===this._freeCells.hasElement(a+d,b+e)&&(c+=1);return 2<c};
p.isRoomCell=function(a,b){for(var c=this._mapDigger.getRooms(),d=0;d<c.length;d++){var e=c[d];if(Utils.isPointInRectangle([a,b],e.getLeft(),e.getTop(),e.getRight(),e.getBottom()))return!0}};p.getFreeNearbyCells=function(a,b,c){var d=[],e=[[a,b]],f=1;5<c&&(f=2);for(var g=-f;g<=f;g++)for(var h=-f;h<f;h++)(0!==g||0!==h)&&this._freeCells.hasElement(a+g,b+h)&&d.push([a+g,b+h]);for(a=0;a<c&&0<d.length;)b=Math.floor(ROT.RNG.getUniform()*(d.length-1)),b=d.splice(b,1),e.push(b[0]),a+=1;return e};
p.getFreeCellInBounds=function(a,b,c,d){a=a||this._leftMostCell;b=b||this._rightMostCell;if(void 0===c||null===c)c=!1;if(void 0===d||null===d)d=0;for(var e=[];a<=b;a++)for(var f=0;f<this._mapHeight;f++)!0===this._freeCells.hasElement(a,f)&&(this.isRoomCell(a,f)||!c)&&e.push([a,f]);b=Math.floor(ROT.RNG.getUniform()*(e.length-1));e=[e[b][0],e[b][1]];0<d&&this.removeCellsAroundCellFromFreeCells(e[0],e[1],d);return e};
p._setStartAndEndPosition=function(){this._startPos=this.getFreeCellInBounds(this._leftMostCell+this.DISTANCE_FROM_EDGE_FOR_STAIRS,this._leftMostCell+this.DISTANCE_FROM_EDGE_FOR_STAIRS+4,!0,2);this._endPos=this.getFreeCellInBounds(this._rightMostCell-this.DISTANCE_FROM_EDGE_FOR_STAIRS-4,this._rightMostCell-this.DISTANCE_FROM_EDGE_FOR_STAIRS,!0,2);this._levelIndex<Globals.numberLevels&&this._setCellChar(">",this._endPos[0],this._endPos[1])};
p._generateMap=function(a){this._mapDigger=new ROT.Map.Digger(this._mapWidth,this._mapHeight,{corridorLength:[2,3],dugPercentage:0.3});this._freeCells=new MapArrayObject;this._mapDigger.create(function(a,b,c){c||(this._freeCells.setElement(1,a,b),this._mapCells.setElement(c?"#":".",a,b))}.bind(this));a=this._mapDigger.getRooms();for(var b=0;b<a.length;b++){var c=a[b];if(null===this._leftMostCell||this._leftMostCell>c.getLeft())this._leftMostCell=c.getLeft();if(null===this._rightMostCell||this._rightMostCell<
c.getRight())this._rightMostCell=c.getRight()}};p._init=function(a){this._levelIndex=a;this._mapCells=new MapArrayObject;this._viewedMapCells=new MapArrayObject;this._generateMap(a);this._setStartAndEndPosition()};tt.MapArrayObject={};MapArrayObject=function(){this._init()};p=MapArrayObject.prototype;p._data=null;p.setElement=function(a,b,c){this._data[this._getKeyFromValues(b,c)]=a};p.removeElement=function(a,b){this._data[this._getKeyFromValues(a,b)]&&delete this._data[this._getKeyFromValues(a,b)]};p.getElementFromValues=function(a,b){return this._data[this._getKeyFromValues(a,b)]?this._data[this._getKeyFromValues(a,b)]:null};
p.moveElement=function(a,b,c,d){var e=this.getElementFromValues(a,b);this.setElement(e,c,d);this.removeElementFromValues(a,b)};p.hasElement=function(a,b){return void 0!==this._data[this._getKeyFromValues(a,b)]&&null!==this._data[this._getKeyFromValues(a,b)]};p.getData=function(){return this._data};p.getKey=function(a){for(var b in this._data)if(this._data[b]===a)return b;return null};p.getIndicesFromKey=function(a){var b=a.split(",");a=parseInt(b[0]);b=parseInt(b[1]);return[a,b]};
p.isSelf=function(a,b,c){b=this.getElementFromValues(b,c);return null!==b&&a.getKey()===b.getKey()?!0:!1};p._getKeyFromValues=function(a,b){return a+","+b};p._init=function(){this._data={}};tt.AI={};AI=function(){};AI.globalPathStorage=null;AI.globalAligntmentVariable=null;
AI.calculateMove=function(a,b,c){var d={};if(a.isParalysed())return d.moveType="no_move",d;var e=b.getData(),f=null,g;for(g in e)if(e[g].isPlayer()){f=e[g];break}e=a.getMapPosition();g=f.getMapPosition();Utils.getDistanceBetweenMapPoints(e,g)>Globals.monsterAwarenessRange?d.moveType="no_move":(AI.globalPathStorage=[],AI.getPathBetweenTwoPoints(e,g,c,b,a.getAlignment()),AI.globalPathStorage.length>Globals.maxMonsterPathToMove||1>=AI.globalPathStorage.length?d.moveType="no_move":2===AI.globalPathStorage.length?
(d.moveType="attack",d.targetActor=f,d.direction=(g[0]-e[0],g[1]-e[1])):(d.moveType="move",d.targetCell=[AI.globalPathStorage[1].x,AI.globalPathStorage[1].y]));return d};AI.passableCallback=function(a,b,c,d,e){if(a===c[0]&&b===c[1])return!0;var f=!1;1===Utils.distanceBetweenTwoPoints(c,[a,b])&&(c=e.getElementFromValues(a,b),null!==c&&(f=c.getAlignment()===AI.globalAligntmentVariable));return d.canWalk(a,b)&&!f};
AI.getPathBetweenTwoPoints=function(a,b,c,d,e){AI.globalPathStorage=[];AI.globalAligntmentVariable=e;(new ROT.Path.Dijkstra(b[0],b[1],function(b,e){return AI.passableCallback(b,e,a,c,d)})).compute(a[0],a[1],function(a,b){AI.globalPathStorage.push({x:a,y:b})})};tt.Attack={};Attack=function(){};
Attack.resolveAttack=function(a,b,c){a._calculateAttAndDef(!1,b);b._calculateAttAndDef(!0,a);var d=b.hasEffect("dodge");a.hasEffect("precision_strike")&&b.setCurrentDefence(0);a.hasEffect("first_strike")&&b.getCurrentHP()===b.getMaxHP()&&a.setCurrentAttack(a.getCurrentAttack()+2);if(a.hasEffect("oppression")&&b.getCurrentHP()<b.getMaxHP()){var e=b.getMaxHP()-b.getCurrentHP(),e=Math.min(3,e);a.setCurrentAttack(a.getCurrentAttack()+e)}a.hasEffect("aggression")&&a.setCurrentAttack(a.getCurrentAttack()+Math.max(0,
a.getNumberAttacksThisTurn()-1));!d&&a.hasEffect("double")&&(b.setCurrentDefence(2*b.getCurrentDefence()),b.setCurrentAttack(2*b.getCurrentAttack()));!d&&(!a.hasEffect("double")&&b.hasEffect("double"))&&(a.setCurrentDefence(2*a.getCurrentDefence()),a.setCurrentAttack(2*a.getCurrentAttack()));!d&&a.hasEffect("shatter")&&b.setCurrentDefence(Math.floor(0.5*b.getCurrentDefence()));!d&&c&&a.setCurrentAttack(Math.floor(1.5*a.getCurrentAttack()));c=0;e=Math.max(0,a.getCurrentAttack()-b.getCurrentDefence());
!d&&a.hasEffect("self_sacrifice")&&(c+=2);!d&&a.hasEffect("fire_brand")&&(e*=2);!d&&b.hasEffect("razor_armour")&&(c+=b.getCurrentDefence());if(!d&&b.hasEffect("absorb"))var f=Math.min(a.getCurrentAttack(),b.getCurrentDefence()),f=Math.max(0,f),e=e-f;!d&&a.hasEffect("death_blow")&&e>=0.5*b.getCurrentHP()&&(e=b.getCurrentHP());!d&&b.hasEffect("payback")&&(c+=e);!d&&a.hasEffect("drain_life")&&(f=Math.max(0,e),f=Math.min(b.getCurrentHP(),f),c-=f);!d&&a.hasEffect("poison_brand")&&0<e&&b.addPoison(Math.max(0,
a.getCurrentAttack()-1));!d&&a.hasEffect("blunt")&&b.addBlunt();!d&&a.hasEffect("attrition")&&b.addAttrition();!d&&a.hasEffect("paralyse")&&0<e&&b.addParalysis();a.hasEffect("berzerk")&&(a.addParalysis(),a.addParalysis());d&&(e=c=0);a.hasEffect("slash")&&(d||0>=e&&(e+=1));b.hasEffect("replenish")&&0===e&&(e-=Math.max(0,a.getCurrentAttack()));d=[];0<=e?(b.damage(e),d.push(new GraphicalEffect("attack",b.getMapPosition(),[e])),e>=b.getCurrentHP()&&a.addNumberMonstersKilledThisTurn(1)):(b.heal(-e),d.push(new GraphicalEffect("heal",
b.getMapPosition(),[-e])));0<c?(a.damage(c),d.push(new GraphicalEffect("attack",a.getMapPosition(),[c]))):0>c&&(a.heal(-c),d.push(new GraphicalEffect("heal",a.getMapPosition(),[-c])));a.resetAttackAndDefenceValues();b.resetAttackAndDefenceValues();return d};tt.Level={};Level=function(a,b){this._scheduler=b;this._levelIndex=a;this._init()};Level.prototype.constructor=Level;p=Level.prototype;p._map=null;p._levelIndex=null;p._actors=null;
p.enterLevel=function(a){this.signalUpdateCamera=new signals.Signal;this.signalPlayerTurn=new signals.Signal;this.signalPlayerDies=new signals.Signal;this.signalAITurnStarted=new signals.Signal;this.signalActorActionFinished=new signals.Signal;this.signalAddGraphicalEffectArray=new signals.Signal;this.signalShowEffectsAndEndTurn=new signals.Signal;this.signalShowEffectsWithoutEndingTurn=new signals.Signal;this.signalShuffle=new signals.Signal;this.signalGoDownstairs=new signals.Signal;this.signalWinGame=
new signals.Signal;this.signalCardGain=new signals.Signal;var b=this._map.getStartPos();this._addActorToLevel(a,b[0],b[1]);a.setActive(!0);a=this._actors.getData();for(var c in a)a[c].isPlayer()||a[c].setActive(!0)};p.destroy=function(){this._map=null};
p.leaveLevel=function(){var a=this._actors.getData(),b;for(b in a)a[b].isPlayer()?(a[b].setActive(!1),a[b]=null):a[b].setActive(!1);this.signalUpdateCamera.removeAll();this.signalUpdateCamera=null;this.signalPlayerTurn.removeAll();this.signalPlayerTurn=null;this.signalPlayerDies.removeAll();this.signalPlayerDies=null;this.signalAITurnStarted.removeAll();this.signalAITurnStarted=null;this.signalActorActionFinished.removeAll();this.signalActorActionFinished=null;this.signalShowEffectsAndEndTurn.removeAll();
this.signalShowEffectsAndEndTurn=null;this.signalShowEffectsWithoutEndingTurn.removeAll();this.signalShowEffectsWithoutEndingTurn=null;this.signalAddGraphicalEffectArray.removeAll();this.signalAddGraphicalEffectArray=null;this.signalShuffle.removeAll();this.signalShuffle=null;this.signalGoDownstairs.removeAll();this.signalGoDownstairs=null;this.signalWinGame.removeAll();this.signalWinGame=null;this.signalCardGain.removeAll();this.signalCardGain=null};
p._getAttackTargets=function(a,b){for(var c=a.getAttackSquares(b),d=[],e=0;e<c.length;e++){var f=this._actors.getElementFromValues(c[e][0],c[e][1]);null!==f&&f.isBad()&&d.push(f)}return d};p._testKnockback=function(a,b){var c=a.getMapPosition()[0]+b[0],d=a.getMapPosition()[1]+b[1];return null===this._actors.getElementFromValues(c,d)&&this._map.canWalk(c,d)?(this._moveActor(a,c,d,!0),!0):!1};
p.attemptGoDownstairs=function(a){a=a.getMapPosition();return Globals.cheat||this._map.isStairs(a[0],a[1])?(this.signalGoDownstairs.dispatch(),!0):!1};
p.interpretPlayerMove=function(a,b){var c=a.getMapPosition(),d=c[0]+b[0],e=c[1]+b[1],c=this._getAttackTargets(a,b);if(0<c.length){a.addNumberAttacksThisTurn(c.length);for(var d=[],e=!1,f=0;f<c.length;f++)!a.hasEffect("double_blow")&&a.hasEffect("knockback")&&(e=!this._testKnockback(c[f],b)),d=Utils.addTwoArraysTogether(d,Attack.resolveAttack(a,c[f],e)),!a.hasEffect("double_blow")&&(!a.hasEffect("knockback")&&c[f].canCounterAttack())&&(d=Utils.addTwoArraysTogether(d,Attack.resolveAttack(c[f],a,!1)));
if(a.hasEffect("double_blow")){a.addNumberAttacksThisTurn(c.length);for(f=0;f<c.length;f++)a.hasEffect("knockback")&&(e=!this._testKnockback(c[f],b)),d=Utils.addTwoArraysTogether(d,Attack.resolveAttack(a,c[f],e)),!a.hasEffect("knockback")&&c[f].canCounterAttack()&&(d=Utils.addTwoArraysTogether(d,Attack.resolveAttack(c[f],a,!1)))}this.signalAddGraphicalEffectArray.dispatch(d);a.hasEffect("knockback")&&!1===e?(Utils.console("IN HERE!!!"),this.signalShowEffectsWithoutEndingTurn.dispatch(),TweenMax.delayedCall(0.3,
this.signalActorActionFinished.dispatch,["done"],this)):this.signalActorActionFinished.dispatch("done")}else this._map.canWalk(d,e)?this._actors.hasElement(d,e)?(Utils.console("Turn failed friendly unit in the way"),this.signalActorActionFinished.dispatch("failed")):this._moveActor(a,d,e):(Utils.console("Turn failed, hit a wall"),this.signalActorActionFinished.dispatch("failed"))};
p._moveActor=function(a,b,c,d){var e=a.getMapPosition();this._actors.removeElement(e[0],e[1]);this._actors.setElement(a,b,c);a.setMapPositionFromValues(b,c);this.signalUpdateCamera.dispatch();d||this.signalActorActionFinished.dispatch("done")};
p._AIMove=function(a){var b=AI.calculateMove(a,this._actors,this._map);if("no_move"===b.moveType)this.signalActorActionFinished.dispatch("done");else if("move"===b.moveType)this._moveActor(a,b.targetCell[0],b.targetCell[1]);else if("attack"===b.moveType){var c=!1;a.hasEffect("knockback")&&(c=!this._testKnockback(b.targetActor,b.direction));c=Attack.resolveAttack(a,b.targetActor,c);!a.hasEffect("knockback")&&b.targetActor.canCounterAttack()&&(c=Utils.addTwoArraysTogether(c,Attack.resolveAttack(b.targetActor,
a,!1)));this.signalAddGraphicalEffectArray.dispatch(c);this.signalActorActionFinished.dispatch("done")}};p.actorTurn=function(a){a.isPlayer()?this.signalPlayerTurn.dispatch(a):(this.signalAITurnStarted.dispatch(a),this._AIMove(a))};p.killActor=function(a){a.isPlayer()?this.signalPlayerDies.dispatch():(a=a.getMapPosition(),this._actors.removeElement(a[0],a[1]),this.signalUpdateCamera.dispatch())};p.updateViewedMap=function(a){this._map.updateViewedMap(a)};p.getMap=function(){return this._map};
p.getAllActors=function(){return this._actors};p.getMapDataToRender=function(){var a={};a.mapData=this._map.getMap();a.viewedMapData=this._map.getViewedMap();a.actorsData=this._actors;return a};p.getNumberEnemiesAroundActor=function(a){for(var b=a.getMapPosition(),b=Utils.getSurroundingCellIndices(b[0],b[1]),b=this._getActorsInCells(b),c=0,d=0;d<b.length;d++)b[d].isBad()!==a.isBad()&&(c+=1);return c};
p._getActorsInCells=function(a){for(var b=[],c=0;c<a.length;c++){var d=this._actors.getElementFromValues(a[c][0],a[c][1]);null!==d&&b.push(d)}return b};p._resolveAttackOld=function(a,b){var c=Math.max(0,a.getCurrentAttack()-b.getCurrentDefence());b.damage(c);this.signalGraphicalEffect.dispatch("attack",b.getMapPosition(),c)};p._addActorToLevel=function(a,b,c){this._actors.setElement(a,b,c);a.setMapPositionFromValues(b,c)};
p._getEmptyCellIndices=function(a){for(var b=0;20>b;){var b=b+1,c=this._map.getFreeCellInBounds(null,null,!0,a);if(this._actors.hasElement(c[0],c[1]))Utils.console("Error there really shouldn't be an actor here already as we are deleting the cells as we go");else return c}Utils.console("Error, could not get empty cell");return!1};
p._createMonsters=function(){var a=Math.ceil(13+3*Math.random()+2.5*this._levelIndex),b=this._map.getEndPos(),c=new Actor(this,GameGlobals.levelBoss[this._levelIndex],this._scheduler);c.setMapPositionFromValues(b[0],b[1]);this._actors.setElement(c,b[0],b[1]);for(var d=0;0>d;d++){for(var b=this._getEmptyCellIndices(0),e=Utils.getRandomArrayValue(GameGlobals.levelGroupEnemies[this._levelIndex]),f=2+Math.floor(Math.random()*(1+0.5*this._levelIndex)),f=this._map.getFreeNearbyCells(b[0],b[1],f),g=0;g<
f.length;g++)c=Utils.getRandomArrayValue(e),c=new Actor(this,c,this._scheduler),c.setMapPositionFromValues(f[g][0],f[g][1]),this._actors.setElement(c,f[g][0],f[g][1]);this._map.removeCellsAroundCellFromFreeCells(b[0],b[1],2)}for(d=0;d<a;d++)b=this._getEmptyCellIndices(2),c=Utils.getRandomArrayValue(GameGlobals.levelEnemies[this._levelIndex]),c=new Actor(this,c,this._scheduler),c.setMapPositionFromValues(b[0],b[1]),this._actors.setElement(c,b[0],b[1])};
p._init=function(){this._map=new Map(this._levelIndex);this._actors=new MapArrayObject;this._createMonsters()};tt.GameScreen={};GameScreen=function(a){this.signalGameOver=new signals.Signal;this.signalGameWon=new signals.Signal;this._init(a);Screen.call(this)};GameScreen.prototype=Object.create(Screen.prototype);GameScreen.prototype.constructor=GameScreen;p=GameScreen.prototype;p.NUMBER_LEVELS=Globals.numberLevels;p._playerTurn=!1;p._shuffleAtEndOfTurn=null;p._currentLevel=null;p._levelArray=null;p._player=null;p._cardPack=null;p._cardSelectionIndices=null;p._mouseCell=null;p._mouseOverInformation=null;
p._cardIndexMouseOver=null;p._swapMouseOver=null;p._shuffleMouseOver=null;p._graphicalEffectArray=null;p._currentActor=null;p._controlsLocked=!1;p._inInstructions=!1;p.UI_START_X=Globals.mapStartCol+Globals.mapWindowWidth+2+1;p.UI_START_Y=Globals.mapStartRow;p.UI_CARD_START_Y=p.UI_START_Y+8-3;p.UI_MOUSE_OVER_START_Y=p.UI_CARD_START_Y+4+Globals.cardsInHand+3;p.SWAP_CARDS_Y=p.UI_CARD_START_Y+Globals.cardsInHand+4;p.SHUFFLE_CARDS_Y=p.UI_CARD_START_Y+Globals.cardsInHand+5;p.MOUSE_OVER_TEXT_WIDTH=22;
p.enter=function(){Screen.prototype.enter.call(this)};p.exit=function(){this.signalGameOver.removeAll();this.signalGameOver=null;this.signalGameWon.removeAll();this.signalGameWon=null;this._getCurrentLevel().leaveLevel();for(var a in this._levelArray)this._levelArray[a].destroy();this._levelArray=null;Screen.prototype.exit.call(this)};p.render=function(){this._display.clear();this._updateMapMouseOver();this._updateUIMouseOver();this.renderUI();this.renderGameGrid()};
p.renderUI=function(){var a=this.UI_START_X,b=this.UI_START_Y;this._display.drawText(a,b-1,Globals.whiteTextColour+"Level "+this._currentLevel+"       [I] help");this._display.drawText(a,b+1,Globals.whiteTextColour+this._player.getName());this._drawActorUIInformation(a,b+2,this._player);""!==this._mouseOverInformation.title&&(this._display.drawText(a,this.UI_MOUSE_OVER_START_Y,Globals.descriptionTextColour+this._mouseOverInformation.title),"actor"===this._mouseOverInformation.objType&&this._drawActorUIInformation(a,
this.UI_MOUSE_OVER_START_Y+1,this._mouseOverInformation.obj));this._drawCardUI()};p.renderGameGrid=function(){this._camera.render(this._getCurrentLevel().getMapDataToRender(),this._getCurrentLevel(),this._newMouseCell)};p.setCameraFocus=function(a){this._camera.setCameraFocus(a[0],a[1]);this.render()};p.handleInput=function(a,b){};p.getMap=function(){};
p._drawCardUI=function(){var a=this.UI_START_X,b=this.UI_CARD_START_Y;this._display.drawText(a,b+2,"Current cards ("+this._cardPack.getNumberCards()+" left)");for(var c=Math.min(this._cardPack.getNumberCards(),Globals.cardsInHand),d=0;d<c;d++){var e=Globals.cyanTextColour,f=this._cardPack.getCardAtIndex(d).getName(),g=Utils.arrayContainsNumber(this._cardSelectionIndices,d);null!==g&&(g+=1,e=Globals.greenTextColour,f=f+" ("+g+")");this._cardIndexMouseOver===d&&(e=Globals.whiteTextColour);this._display.drawText(a,
b+d+3,e+f)}e=this._swapMouseOver?Globals.whiteTextColour:Globals.yellowTextColour;this._display.drawText(a,this.SWAP_CARDS_Y,e+"Discard Cards");e=this._shuffleMouseOver?Globals.whiteTextColour:Globals.yellowTextColour;this._display.drawText(a,this.SHUFFLE_CARDS_Y,e+"Shuffle Cards");null!==this._cardIndexMouseOver&&this._cardIndexMouseOver<c&&this._display.drawText(a,this.UI_MOUSE_OVER_START_Y,Globals.whiteTextColour+this._cardPack.getCardAtIndex(this._cardIndexMouseOver).getDescription(),this.MOUSE_OVER_TEXT_WIDTH);
this._swapMouseOver&&this._display.drawText(a,this.UI_MOUSE_OVER_START_Y,Globals.whiteTextColour+"Discard up to three selected cards, regaining 1HP for each.\nThis takes a turn.",this.MOUSE_OVER_TEXT_WIDTH);this._shuffleMouseOver&&this._display.drawText(a,this.UI_MOUSE_OVER_START_Y,Globals.whiteTextColour+"Shuffles cards and deals a new hand, but costs 2 cards.\nThis takes a turn.",this.MOUSE_OVER_TEXT_WIDTH)};
p._drawActorUIInformation=function(a,b,c){var d=Globals.cyanTextColour+"Health  "+Globals.whiteTextColour+c.getCurrentHP()+"/"+c.getMaxHP(),e=Globals.cyanTextColour+"Attack  "+this._getUIPlusesText(c.getBaseAttack(),c.getCurrentAttack()),f=Globals.cyanTextColour+"Defence "+this._getUIPlusesText(c.getBaseDefence(),c.getCurrentDefence());this._display.drawText(a,b,d);this._display.drawText(a,b+1,e);this._display.drawText(a,b+2,f);f=c.getCombinedEffectsArray();d=0;if(!1===c.isPlayer())for(e=0;e<f.length;e++)this._display.drawText(a,
b+e+1+2,Globals.greenTextColour+f[e].getText()),d+=1;c=c.getStatusTextArray();if(0<c.length)for(e=0;e<c.length;e++)this._display.drawText(a,b+e+1+2+d,c[e])};p._getUIPlusesText=function(a,b){if(a===b)return Globals.whiteTextColour+b.toString();if(a>b)return Globals.whiteTextColour+b.toString()+Globals.redTextColour+" (-"+Math.abs(b-a).toString()+")";if(a<b)return Globals.whiteTextColour+b.toString()+Globals.greenTextColour+" (+"+(b-a).toString()+")"};
p._setMouseOverInformation=function(a){this._mouseOverInformation.objType="NONE";null===a?this._mouseOverInformation.title="":null===a.floorCell?this._mouseOverInformation.title="":"."===a.floorCell&&null===a.actor?this._mouseOverInformation.title="An empty floor":"#"===a.floorCell?this._mouseOverInformation.title="A wall":">"===a.floorCell?this._mouseOverInformation.title="Stairs - press > to go down":a.actor&&"@"===a.actor?this._mouseOverInformation.title=GameGlobals.actorsData[a.getChar()].name:
(this._mouseOverInformation.objType="actor",this._mouseOverInformation.obj=a.actor,this._mouseOverInformation.title=GameGlobals.actorsData[a.actor.getChar()].name)};p._updateCamera=function(){this.setCameraFocus(this._player.getMapPosition())};p._getCurrentLevel=function(){return this._levelArray[this._currentLevel]};
p._init=function(a){this._display=a;this._newMouseCell=this._mouseCell=null;this._mouseOverInformation={};this._mouseOverInformation.title="";this._controlsLocked=!0;this._camera=new Camera(this._display);this._currentLevel=1;this._playerTurn=!1;this._numberCardsRemaning=Globals.startingPackSize;this._scheduler=new ROT.Scheduler.Simple;this._engine=new ROT.Engine(this._scheduler);this._levelArray={};for(a=1;a<=this.NUMBER_LEVELS;a++){var b=new Level(a,this._scheduler);this._levelArray[a]=b}this._player=
new Actor(this,"@",this._scheduler,null);this._cardPack=new CardPack;this._cardSelectionIndices=[];this._setUpLevel();this._engine.start();this._controlsLocked=!1};
p._setUpLevel=function(){this._shuffleMouseOver=this._swapMouseOver=this._shuffleAtEndOfTurn=this._playerTurn=!1;this._engine.lock();this._player.setLevel(this._getCurrentLevel());this._getCurrentLevel().enterLevel(this._player);this._getCurrentLevel().signalUpdateCamera.add(this._updateCamera,this);this._getCurrentLevel().signalPlayerTurn.add(function(a){this._playerTurnStarted(a)},this);this._getCurrentLevel().signalPlayerDies.add(this._playerDies,this);this._getCurrentLevel().signalAITurnStarted.add(function(a){this._AITurnStarted(a)},
this);this._getCurrentLevel().signalActorActionFinished.add(this._actorActionFinished,this);this._getCurrentLevel().signalShowEffectsAndEndTurn.add(this._showAllGraphicalEffectsAndEndTurn,this);this._getCurrentLevel().signalShowEffectsWithoutEndingTurn.add(this._showAllGraphicalEffects,this);this._getCurrentLevel().signalAddGraphicalEffectArray.add(this._addGraphicalEffects,this);this._getCurrentLevel().signalShuffle.add(this._shuffleCallback,this);this._getCurrentLevel().signalGoDownstairs.add(this._goDownstairs,
this);this._getCurrentLevel().signalWinGame.add(this._winGame,this);this._getCurrentLevel().signalCardGain.add(this._cardGain,this);this.setCameraFocus(this._player.getMapPosition());this._engine.unlock()};p._shuffleCallback=function(){this._shuffleAtEndOfTurn=!0};p._actorActionFinished=function(a){"done"===a?(this._playerTurn&&!this._player.getsFreeTurn()&&(this._playerTurn=!1),this._currentActor.actionFinished()):"failed"===a&&(this._controlsLocked=!1)};
p._playerDies=function(){Utils.console("YOU DIE!!!");this._controlsLocked=!0;this._engine.lock();this.signalGameOver.dispatch()};p._winGame=function(){Utils.console("YOU WIN!!!");this._controlsLocked=!0;this._engine.lock();TweenMax.delayedCall(0.35,this.signalGameWon.dispatch,[],!0)};p._cardGain=function(a){!a&&0!==a&&Utils.console("Error, no cards to be gained");0<a&&(this._cardPack.increaseNumberCards(a),this.render())};
p._actorTurnStarted=function(a){this._graphicalEffectArray=[];this._currentActor=a;this._engine.lock()};p._AITurnStarted=function(a){this._actorTurnStarted(a);this._controlsLocked=!0};
p._playerTurnStarted=function(a){this._actorTurnStarted(a);this._cardPack.removeCards(this._cardSelectionIndices,!0);this._cardSelectionIndices=[];this._shuffleAtEndOfTurn&&(this._shuffleAtEndOfTurn=!1,this._cardPack.shuffle());this._player.updateValuesFromCards(this._cardPack.getCardsFromIndices(this._cardSelectionIndices));this._playerTurn=!0;this.render();this._player.isParalysed()&&this._player.actionFinished()};
p._updateMapMouseOver=function(){if(null!=this._newMouseCell)if(this._newMouseCell[0]>=Globals.mapStartCol&&this._newMouseCell[0]<=Globals.mapWindowWidth-1&&this._newMouseCell[1]>=Globals.mapStartRow&&this._newMouseCell[1]<=Globals.mapWindowHeight-1){var a=this._camera.getCellDataForMouseOver(this._newMouseCell[0],this._newMouseCell[1]);this._setMouseOverInformation(a)}else this._setMouseOverInformation(null)};
p._updateUIMouseOver=function(){null!=this._newMouseCell&&(p.UI_START_X=Globals.mapStartCol+Globals.mapWindowWidth+2+2,p.UI_START_Y=Globals.mapStartRow-1,p.UI_CARD_START_Y=p.UI_START_Y+16,this._cardIndexMouseOver=this._newMouseCell[0]>=this.UI_START_X&&this._newMouseCell[1]>=this.UI_CARD_START_Y+3&&this._newMouseCell[1]<=this.UI_CARD_START_Y+3+Globals.cardsInHand?this._newMouseCell[1]-(this.UI_CARD_START_Y+3):null,this._newMouseCell[0]>=this.UI_START_X&&this._newMouseCell[1]===this.SWAP_CARDS_Y?(this._swapMouseOver=
!0,this._shuffleMouseOver=!1):this._newMouseCell[0]>=this.UI_START_X&&this._newMouseCell[1]===this.SHUFFLE_CARDS_Y?(this._swapMouseOver=!1,this._shuffleMouseOver=!0):this._shuffleMouseOver=this._swapMouseOver=!1)};
p._addGraphicalEffects=function(a){if(a&&0<a.length){this._graphicalEffectArray.push(a);for(a=0;a<this._graphicalEffectArray.length;a++){var b=0,c=null;for(j=this._graphicalEffectArray[a].length-1;0<=j;j--)"heal"===this._graphicalEffectArray[a][j].getType()&&(b+=this._graphicalEffectArray[a][j].getValue(),c=this._graphicalEffectArray[a][j].getPosition(),this._graphicalEffectArray[a].splice(j,1));0<b&&(b=new GraphicalEffect("heal",c,[b]),this._graphicalEffectArray[a].push(b))}}};
p._showAllGraphicalEffectsAndEndTurn=function(){if(0<this._graphicalEffectArray.length){var a=this._graphicalEffectArray.splice(0,1);this._showGraphicalEffect(a);TweenMax.delayedCall(Globals.graphicalEffectDelay,this.render,[],this);TweenMax.delayedCall(Globals.graphicalEffectDelay+Globals.delayBetweenEffects,this._showAllGraphicalEffectsAndEndTurn,[],this)}else this._turnCompletelyFinishedAfterGraphicalEffects()};
p._showAllGraphicalEffects=function(){if(0<this._graphicalEffectArray.length){var a=this._graphicalEffectArray.splice(0,1);this._showGraphicalEffect(a);TweenMax.delayedCall(Globals.graphicalEffectDelay,this.render,[],this);TweenMax.delayedCall(Globals.graphicalEffectDelay+Globals.delayBetweenEffects,this._showAllGraphicalEffects,[],this)}};
p._showGraphicalEffect=function(a){for(var b=0;b<a.length;b++)for(var c=0;c<a[b].length;c++)this._camera.updateCell(a[b][c].getPosition()[0],a[b][c].getPosition()[1],this._getCurrentLevel().getMapDataToRender().mapData,a[b][c].getValue().toString(),a[b][c].getColour())};
p._turnCompletelyFinishedAfterGraphicalEffects=function(){this._camera.render(this._getCurrentLevel().getMapDataToRender(),this._getCurrentLevel(),this._newMouseCell);!0===this._playerTurn?this._player.getsFreeTurn()?(this._player.resetNumberMonstersKilledThisTurn(),this._controlsLocked=!1,this._player.preActionStuff(),this._cardPack.removeCards(this._cardSelectionIndices,!0),this._cardSelectionIndices=[],this._player.updateValuesFromCards(this._cardPack.getCardsFromIndices(this._cardSelectionIndices)),
this._playerTurn=!0,this.render()):(this._controlsLocked=!1,this._engine.unlock()):(this._controlsLocked=!1,this._engine.unlock())};
p._toggleCard=function(){this._controlsLocked=!0;for(var a=null,b=0;b<this._cardSelectionIndices.length;b++)this._cardIndexMouseOver===this._cardSelectionIndices[b]&&(a=b);null!==a?this._cardSelectionIndices.splice(a,1):this._cardSelectionIndices.length<Globals.numberCardsYouCanSelect&&this._cardSelectionIndices.push(this._cardIndexMouseOver);this._player.updateValuesFromCards(this._cardPack.getCardsFromIndices(this._cardSelectionIndices));this.render();this._controlsLocked=!1};
p._swapCards=function(){this._controlsLocked=!0;0<this._cardSelectionIndices.length&&(this._cardPack.removeCards(this._cardSelectionIndices,!0),this._player.heal(this._cardSelectionIndices.length),this._cardSelectionIndices=[],this.render(),TweenMax.delayedCall(0.2,this._endCurrentTurn,[],this));this._controlsLocked=!1};
p._shuffleCards=function(){this._controlsLocked=!0;0<this._cardPack.getNumberCards()&&(this._cardPack.reduceNumberCards(Globals.shuffleCardReduction),this._cardPack.shuffle(),this.render(),TweenMax.delayedCall(0.2,this._endCurrentTurn,[],this));this._controlsLocked=!1};p._endCurrentTurn=function(){this._actorActionFinished("done")};p._enterInstructions=function(){!1==this._inInstructions&&(this._inInstructions=this._controlsLocked=!0,Instructions.drawScreen(this._display))};
p._leaveInstructions=function(){!0==this._inInstructions&&(this.render(),this._controlsLocked=this._inInstructions=!1)};p._goDownstairs=function(){this._getCurrentLevel().leaveLevel();this._getCurrentLevel().destroy();this._currentLevel+=1;Utils.console("this._currentLevel = "+this._currentLevel);this._setUpLevel();this._playerTurn=!0;this._controlsLocked=!1};
p._keydownHandler=function(a){var b;b={};b[ROT.VK_NUMPAD8]={controlType:"movement",direction:0};b[ROT.VK_NUMPAD9]={controlType:"movement",direction:1};b[ROT.VK_NUMPAD6]={controlType:"movement",direction:2};b[ROT.VK_NUMPAD3]={controlType:"movement",direction:3};b[ROT.VK_NUMPAD2]={controlType:"movement",direction:4};b[ROT.VK_NUMPAD1]={controlType:"movement",direction:5};b[ROT.VK_NUMPAD4]={controlType:"movement",direction:6};b[ROT.VK_NUMPAD7]={controlType:"movement",direction:7};b[ROT.VK_W]={controlType:"movement",
direction:0};b[ROT.VK_E]={controlType:"movement",direction:1};b[ROT.VK_D]={controlType:"movement",direction:2};b[ROT.VK_C]={controlType:"movement",direction:3};b[ROT.VK_X]={controlType:"movement",direction:4};b[ROT.VK_Z]={controlType:"movement",direction:5};b[ROT.VK_A]={controlType:"movement",direction:6};b[ROT.VK_Q]={controlType:"movement",direction:7};b[ROT.VK_NUMPAD5]={controlType:"movement",direction:"NONE"};b[ROT.VK_S]={controlType:"movement",direction:"NONE"};Globals.cheat&&(b[ROT.VK_N]={controlType:"cheat",
type:"new_hand"},b[ROT.VK_B]={controlType:"cheat",type:"shuffle"},b[ROT.VK_H]={controlType:"cheat",type:"full_health"});b[ROT.VK_I]={controlType:"instructions",type:"open"};b[ROT.VK_QUESTION_MARK]={controlType:"instructions",type:"open"};b[ROT.VK_SPACE]={controlType:"instructions",type:"close"};b[ROT.VK_ESCAPE]={controlType:"instructions",type:"close"};b[ROT.VK_GREATER_THAN]={controlType:"take_stairs",type:"down"};b[ROT.VK_PERIOD]={controlType:"take_stairs",type:"down"};a=a.keyCode;a in b&&((!1===
this._controlsLocked||!0===this._inInstructions)&&"instructions"===b[a].controlType?"open"==b[a].type?this._enterInstructions():"close"==b[a].type&&this._leaveInstructions():this._playerTurn&&!0!=this._controlsLocked&&(this._controlsLocked=!0,"camera"!==b[a].controlType&&("movement"===b[a].controlType?"NONE"==b[a].direction?this._endCurrentTurn():(b=ROT.DIRS[8][b[a].direction],this._getCurrentLevel().interpretPlayerMove(this._player,b)):"take_stairs"===b[a].controlType?this._currentLevel<this.NUMBER_LEVELS&&
"down"===b[a].type?this._getCurrentLevel().attemptGoDownstairs(this._player)||(this._controlsLocked=!1):this._controlsLocked=!1:!0===Globals.cheat&&"cheat"===b[a].controlType&&("new_hand"==b[a].type?this._cardPack.newHand():"shuffle"==b[a].type?this._cardPack.shuffle():"full_health"==b[a].type&&this._player.setFullHealth(),this.render(),this._controlsLocked=!1))))};p._keypressupHandler=function(a){};p._keypressHandler=function(a){};
p._mouseDownHandler=function(a){if(!(!0===this._controlsLocked||!0===this._inInstructions))if(this._newMouseCell=this._display.eventToPosition(a),a=null,null!==this._newMouseCell){a=this._camera.getCellDataForMouseOver(this._newMouseCell[0],this._newMouseCell[1]);var b=Math.min(this._cardPack.getNumberCards(),Globals.cardsInHand);null!==a&&"."===a.floorCell?(b=this._player.getMapPosition(),0===Utils.getDistanceBetweenMapPoints(b,a.position)?this._endCurrentTurn():(AI.getPathBetweenTwoPoints(b,a.position,
this._getCurrentLevel().getMap(),this._getCurrentLevel().getAllActors(),"GOOD"),a=[AI.globalPathStorage[1].x-b[0],AI.globalPathStorage[1].y-b[1]],this._getCurrentLevel().interpretPlayerMove(this._player,a))):null!==this._cardIndexMouseOver&&this._cardIndexMouseOver<b?this._toggleCard():!0===this._swapMouseOver&&this._swapCards();!0===this._shuffleMouseOver&&this._shuffleCards()}};p._mouseUpHandler=function(a){};p._mouseOverHandler=function(a){};p._mouseOutHandler=function(a){};
p._mouseMoveHandler=function(a){!0===this._controlsLocked||!0===this._inInstructions||(this._newMouseCell=this._display.eventToPosition(a),(null===this._mouseCell||this._mouseCell[0]!==this._newMouseCell[0]||this._mouseCell[1]!==this._newMouseCell[1])&&this.render(),this._mouseCell=this._newMouseCell)};tt.WinningScreen={};WinningScreen=function(){this._init();Screen.call(this)};WinningScreen.prototype=Object.create(Screen.prototype);WinningScreen.prototype.constructor=WinningScreen;p=WinningScreen.prototype;p.enter=function(){Screen.prototype.enter.call(this)};p.exit=function(){this.signalEndGame.removeAll();this.signalEndGame=null;Screen.prototype.exit.call(this)};
p.render=function(a){a.drawText(49,4,"%c{yellow}Congratulations!");a.drawText(49,6,"%c{white}You won the game!");a.drawText(32,12,"%c{white}Sorry I haven't had time to make a decent end screen, so you're just going to have to imagine it. \n\nThanks for playing, if you like the game or have any ideas for improvements then please let me know on the RogueTemple forums.",60);a.drawText(46,25,"%c{cyan}Press [Enter] to continue");Screen.prototype.render.call(this)};p.handleInput=function(a,b){};
p._init=function(){this.signalEndGame=new signals.Signal};p._keydownHandler=function(a){a.keyCode===ROT.VK_RETURN&&(Utils.console("Game over screen clicked"),this.signalEndGame.dispatch())};tt.GameOverScreen={};GameOverScreen=function(){this._init();Screen.call(this)};GameOverScreen.prototype=Object.create(Screen.prototype);GameOverScreen.prototype.constructor=GameOverScreen;p=GameOverScreen.prototype;p.enter=function(){Screen.prototype.enter.call(this)};p.exit=function(){this.signalEndGame.removeAll();this.signalEndGame=null;Screen.prototype.exit.call(this)};
p.render=function(a){a.drawText(54,4,"%c{yellow}Game Over!");a.drawText(51,6,"%c{white}Bad luck old bean!");a.drawText(37,12,"%c{white}Have another bash at it there's a good chap.",60);a.drawText(46,25,"%c{cyan}Press [Enter] to continue");Screen.prototype.render.call(this)};p.handleInput=function(a,b){};p._init=function(){this.signalEndGame=new signals.Signal};p._keydownHandler=function(a){a.keyCode===ROT.VK_RETURN&&(Utils.console("Game over screen clicked"),this.signalEndGame.dispatch())};tt.Instructions={};Instructions=function(){};
Instructions.drawScreen=function(a){a.clear();a.drawText(52,2,"%c{yellow}Instructions");a.drawText(8,5,"%c{white}The idea of the game is to battle your way through the five floors of the dungeon and kill the demon Ariel that lurks at the bottom.",100);a.drawText(8,8,"%c{white}The game involves defeating monsters in battle, whilst playing cards which give you skills that will help you.",100);a.drawText(8,11,"%c{white}You have up to 15 cards in your hand and you can choose up to three to play each turn. All the cards have different effects, for example the Strength card boosts your attack from 1 to 2 and Flame Strike doubles the damage caused after defence has been subtracted. By playing both in the same turn you can hit and damage a monster with 1 defence by 2 points.",100);
a.drawText(8,15,"%c{white}Different cards give you different abilities, such as restoring health, paralysing monsters or dodging all attacks for a turn",100);a.drawText(8,18,"%c{white}All the cards effects last for one turn and once used the card are removed from your hand. If you have extra cards then those cards will be replaced by new ones from the pack",100);a.drawText(8,20,"%c{white}You can discard up to 3 unwanted cards per turn to regain 1 health point for each and you can also spend 2 cards to shuffle and deal new cards from the pack",
100);a.drawText(8,22,"%c{white}Cards are selected and deselected by clicking on them in the card list. The order you select cards is important as this is the order that the effects are applied",100);a.drawText(54,25,"%c{white}Controls",100);a.drawText(8,27,"%c{white}You can move your character using the numpad or the qwe, asd, zxc keys or by clicking on a square adjacent to the character with the mouse",100);a.drawText(8,30,"%c{white}Click on a card to toggle selection up to 3 cards",100);a.drawText(8,
32,"%c{white}[5] and [S] waits a turn and [I] brings up instructions in game",100);a.drawText(8,34,"%c{white}Mouse over cards and monsters to get more information on them",100);a.drawText(46,37,"%c{cyan}Press [Escape or Space] to exit")};tt.MenuScreen={};MenuScreen=function(a){this._init(a);Screen.call(this)};MenuScreen.prototype=Object.create(Screen.prototype);MenuScreen.prototype.constructor=MenuScreen;p=MenuScreen.prototype;p._display=null;p._inInstructions=null;p.enter=function(){Utils.console("Entered menu screen");Screen.prototype.enter.call(this)};p.exit=function(){Utils.console("Exited menu screen");this.signalStartGame.removeAll();this.signalStartGame=null;Screen.prototype.exit.call(this)};
p.render=function(a){this._drawScreen();Screen.prototype.render.call(this)};
p._drawScreen=function(){this._display.clear();this._display.drawText(49,4,"%c{yellow}Into the Darkness");this._display.drawText(41,6,"%c{white}Where your nightmares will come true");this._display.drawText(50,10,"%c{cyan}By Tim Saunders");this._display.drawText(43,11,"%c{cyan}For the 2015 7DRL competition");this._display.drawText(33,16,"%c{white}A tactical roguelike where the moves you can make are limited to the cards you currently hold in your hand",60);this._display.drawText(46,25,"%c{cyan}Press [Enter] to start");
this._display.drawText(44,27,"%c{cyan}Press [I] for instructions")};p._showInstructions=function(){this._inInstructions=!0;Instructions.drawScreen(this._display)};p._closeInstructions=function(){this._inInstructions=!1;this._drawScreen()};p._init=function(a){this._display=a;this._inInstructions=!1;this.signalStartGame=new signals.Signal};
p._keydownHandler=function(a){!1===this._inInstructions&&a.keyCode===ROT.VK_RETURN?(Utils.console("Menu screen clicked"),this.signalStartGame.dispatch()):a.keyCode===ROT.VK_I||a.keyCode===ROT.VK_QUESTION_MARK?!1===this._inInstructions&&this._showInstructions():(a.keyCode===ROT.VK_ESCAPE||a.keyCode===ROT.VK_SPACE)&&!0===this._inInstructions&&this._closeInstructions()};p._keypressupHandler=function(a){};p._keypressHandler=function(a){};tt.ScreenManager={};ScreenManager=function(){};p=ScreenManager.prototype;ScreenManager.prototype.constructor=ScreenManager;p._display=null;p._currentScreen=null;p._menuScreen=null;
p.init=function(){Globals.screen_manager=this;this._handle=this;this._currentScreen=null;this._display=new ROT.Display({width:Globals.screen_width,height:Globals.screen_height,fontSize:Globals.font_size});document.body.appendChild(this._display.getContainer());window.addEventListener("keydown",function(a){this._handle._keydownHandler(a)}.bind(this),!1);window.addEventListener("keyup",function(a){this._handle._keypressupHandler(a)}.bind(this),!1);window.addEventListener("keypress",function(a){this._handle._keypressHandler(a)}.bind(this),
!1);window.addEventListener("mousedown",function(a){this._handle._mouseDownHandler(a)}.bind(this),!1);window.addEventListener("mouseup",function(a){this._handle._mouseUpHandler(a)}.bind(this),!1);window.addEventListener("mouseover",function(a){this._handle._mouseOverHandler(a)}.bind(this),!1);window.addEventListener("mouseout",function(a){this._handle._mouseOutHandler(a)}.bind(this),!1);window.addEventListener("mousemove",function(a){this._handle._mouseMoveHandler(a)}.bind(this),!1);this._startMenuScreen()};
p._startMenuScreen=function(){var a=new MenuScreen(this._display);a.signalStartGame.add(this._startGame,this);this._switchScreen(a)};p._startGame=function(){var a=new GameScreen(this._display);a.signalGameOver.add(this._gameOver,this);a.signalGameWon.add(this._gameWon,this);this._switchScreen(a)};p._gameWon=function(){var a=new WinningScreen(this._display);a.signalEndGame.add(this._startMenuScreen,this);this._switchScreen(a)};
p._gameOver=function(){var a=new GameOverScreen(this._display);a.signalEndGame.add(this._startMenuScreen,this);this._switchScreen(a)};p._switchScreen=function(a){null!==this._currentScreen&&this._currentScreen.exit();this._display.clear();if((this._currentScreen=a)&&null!==this._currentScreen)this._currentScreen.enter(),this._currentScreen.render(this._display)};p._keydownHandler=function(a){this._currentScreen&&null!==this._currentScreen&&this._currentScreen._keydownHandler(a)};
p._keypressupHandler=function(a){this._currentScreen&&null!==this._currentScreen&&this._currentScreen._keypressupHandler(a)};p._keypressHandler=function(a){this._currentScreen&&null!==this._currentScreen&&this._currentScreen._keypressHandler(a)};p._mouseDownHandler=function(a){this._currentScreen&&null!==this._currentScreen&&this._currentScreen._mouseDownHandler(a)};p._mouseUpHandler=function(a){this._currentScreen&&null!==this._currentScreen&&this._currentScreen._mouseUpHandler(a)};
p._mouseOverHandler=function(a){Utils.console("this._mouseOverHandler");this._currentScreen&&null!==this._currentScreen&&this._currentScreen._mouseOverHandler(a)};p._mouseOutHandler=function(a){this._currentScreen&&null!==this._currentScreen&&this._currentScreen._mouseOutHandler(a)};p._mouseMoveHandler=function(a){this._currentScreen&&null!==this._currentScreen&&this._currentScreen._mouseMoveHandler(a)};tt.Main={};function Main(){this.init()}p=Main.prototype;p.init=function(){this.screenManager=new ScreenManager;this.screenManager.init()};goog.exportSymbol("tt.Main",Main);goog.exportProperty(Main.prototype,"init",Main.prototype.init);}).call(this);
